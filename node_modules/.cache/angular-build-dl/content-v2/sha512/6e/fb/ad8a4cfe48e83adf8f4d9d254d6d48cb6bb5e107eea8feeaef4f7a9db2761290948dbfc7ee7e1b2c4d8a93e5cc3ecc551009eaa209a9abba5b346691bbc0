{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/config.service.ts","./src/app/create-menubar/create-menubar.component.ts","./src/app/create-menubar/create-menubar.component.html","./src/app/create-options/create-options.component.ts","./src/app/create-options/create-options.component.html","./src/app/create/create.component.ts","./src/app/create/create.component.html","./src/app/example/example.component.ts","./src/app/example/example.component.html","./src/app/faq/faq.component.ts","./src/app/faq/faq.component.html","./src/app/file-input/file-input.component.ts","./src/app/file-input/file-input.component.html","./src/app/footer/page-footer.ts","./src/app/footer/page-footer.html","./src/app/impress/impress.component.ts","./src/app/impress/impress.component.html","./src/app/list-input/list-input.component.ts","./src/app/list-input/list-input.component.html","./src/app/names.service.ts","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/power-input/power-input.component.ts","./src/app/power-input/power-input.component.html","./src/app/privacy-consent-banner/privacy-consent-banner.component.ts","./src/app/privacy-consent-banner/privacy-consent-banner.component.html","./src/app/privacy-policy-page/privacy-policy-page.component.ts","./src/app/privacy-policy-page/privacy-policy-page.component.html","./src/app/result-page/result-page.component.ts","./src/app/result-page/result-page.component.html","./src/app/tax-table/tax-table.component.ts","./src/app/tax-table/tax-table.component.html","./src/app/terms-of-service-page/terms-of-service-page.component.ts","./src/app/terms-of-service-page/terms-of-service-page.component.html","./src/app/title-bar/title-bar.component.ts","./src/app/title-bar/title-bar.component.html","./src/app/user-input.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'tax2proteome';\n}\n","<div class=\"container\">\n  <app-title-bar></app-title-bar>\n  <div class=\"gap-20\"></div>\n  <app-privacy-consent-banner></app-privacy-consent-banner>\n  <app-nav-bar></app-nav-bar>\n</div>\n<div class=\"footer-container\">\n  <app-page-footer class=\"footer\"></app-page-footer>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppRouting} from './app.routing';\nimport {RouterModule} from '@angular/router';\nimport {AppComponent} from './app.component';\n\n// Angular Material Components\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n// import {MatCheckboxModule} from '@angular/material';\n// import {MatButtonModule} from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatListModule} from '@angular/material/list';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatIconModule, MatIconRegistry} from '@angular/material/icon';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {MatButtonModule} from '@angular/material/button';\nimport {NamesService} from './names.service';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { ImpressComponent } from './impress/impress.component';\nimport { TitleBarComponent } from './title-bar/title-bar.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { CreateComponent } from './create/create.component';\nimport { TaxTableComponent } from './tax-table/tax-table.component';\nimport { CreateMenubarComponent } from './create-menubar/create-menubar.component';\nimport { PowerInputComponent } from './power-input/power-input.component';\nimport { FileInputComponent } from './file-input/file-input.component';\nimport { ListInputComponent } from './list-input/list-input.component';\nimport { CreateOptionsComponent } from './create-options/create-options.component';\nimport { FaqComponent } from './faq/faq.component';\nimport { ExampleComponent } from './example/example.component';\nimport {TermsOfServicePageComponent} from './terms-of-service-page/terms-of-service-page.component';\nimport {PrivacyConsentBannerComponent} from './privacy-consent-banner/privacy-consent-banner.component';\nimport {PrivacyPolicyPageComponent} from './privacy-policy-page/privacy-policy-page.component';\nimport {FooterComponent} from './footer/page-footer';\nimport {UserInputService} from './user-input.service';\nimport { FontAwesomeModule, FaIconLibrary } from '@fortawesome/angular-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons';\nimport { faUpload} from '@fortawesome/free-solid-svg-icons';\nimport { ResultPageComponent } from './result-page/result-page.component';\nimport {routing} from './app.routing';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImpressComponent,\n    TitleBarComponent,\n    NavBarComponent,\n    CreateComponent,\n    TaxTableComponent,\n    CreateMenubarComponent,\n    PowerInputComponent,\n    FileInputComponent,\n    ListInputComponent,\n    CreateOptionsComponent,\n    FaqComponent,\n    ExampleComponent,\n    ResultPageComponent,\n    TermsOfServicePageComponent,\n    PrivacyConsentBannerComponent,\n    PrivacyPolicyPageComponent,\n    FooterComponent,\n  ],\n    imports: [\n        HttpClientModule,\n        BrowserModule,\n        routing,\n        AppRouting,\n        RouterModule,\n        BrowserAnimationsModule,\n        // MatCheckboxModule,\n        // MatButtonModule,\n        MatInputModule,\n        MatAutocompleteModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n        MatSidenavModule,\n        MatToolbarModule,\n        MatListModule,\n        MatGridListModule,\n        MatCardModule,\n        MatStepperModule,\n        MatTabsModule,\n        MatExpansionModule,\n        MatButtonToggleModule,\n        MatChipsModule,\n        MatIconModule,\n        MatProgressSpinnerModule,\n        MatProgressBarModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatSnackBarModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        FlexLayoutModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        FontAwesomeModule,\n    ],\n  providers: [\n      NamesService,\n      UserInputService,\n      TaxTableComponent,\n      ResultPageComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n    constructor(library: FaIconLibrary) {\n        // Add an icon to the library for convenient access in other components\n        library.addIcons(faCoffee);\n        library.addIcons(faUpload);\n        library.addIcons(faFileUpload);\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModuleWithProviders } from '@angular/core';\nimport { CreateComponent } from './create/create.component';\nimport {TermsOfServicePageComponent} from './terms-of-service-page/terms-of-service-page.component';\nimport {PrivacyPolicyPageComponent} from './privacy-policy-page/privacy-policy-page.component';\nimport {ImpressComponent} from './impress/impress.component';\n\n/*import {FaqComponent} from \"./faq/faq.component\";\nimport {ImpressComponent} from \"./impress/impress.component\";\nimport {ExampleComponent} from \"./example/example.component\";\nimport {AppComponent} from \"./app.component\";\nimport { ResultPageComponent } from './result-page/result-page.component'*/\n\nexport const routes: Routes = [\n    { path: 'termsofservice', component: TermsOfServicePageComponent},\n    { path: 'privacypolicy', component: PrivacyPolicyPageComponent},\n    { path: 'impressum', component: ImpressComponent},\n    { path: '**', component: CreateComponent },\n    /*{ path: 'create', component: CreateComponent },\n    { path: 'faq', component: FaqComponent },\n    { path: 'impress', component: ImpressComponent},\n    { path: 'example', component: ExampleComponent},\n    { path: '**', component: CreateComponent },\n    { path: 'result',  component: ResultPageComponent },*/\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes);\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRouting { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {Observable, throwError} from 'rxjs';\nimport {UserInputService} from './user-input.service';\nimport * as uuid from 'uuid';\n\n// write config file\n// get status\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n  private rh: string;\n  private nr: string;\n  resultLink = '';\n  status = '';\n  private myId = uuid.v4();\n  private url = 'https://tax2proteome.de/api/write_config.php';\n  private url2 = 'https://tax2proteome.de/api/get.php';\n\n  constructor(\n      private http: HttpClient,\n      private userInService: UserInputService,\n      ) { }\n\n  getConfig<T>(): Observable<string> {\n    if (this.userInService.selectedDatabase === 'NCBI-nr' && this.userInService.selectedHeader === 'reduced headers'){\n      this.rh = '1'; } else {this.rh = '0'; }\n    if (this.userInService.selectedDatabase !== 'NCBI-nr' && this.userInService.selectedRedundant === 'non-redundant'){\n      this.nr = '1'; } else{this.nr = '0'; }\n    const taxa: number[] = [];\n    this.userInService.selectedTaxa.forEach((entry) => {\n            taxa.push(entry.taxid);\n    });\n    let params = new HttpParams();\n    if (taxa.length > 0) {\n      params = params.set('id', taxa.toString());\n    }\n    if (this.userInService.selectedDatabase === 'NCBI-nr'){\n      params = params.set('db', 'ncbi');\n    }\n    else{\n      params = params.set('db', this.userInService.selectedDatabase.toLowerCase().toString());\n    }\n    params = params.set('rank', this.userInService.selectedRank.toLowerCase().toString());\n    params = params.set('nr', this.nr.toString());\n    params = params.set('rh', this.rh.toString());\n    params = params.set('uid', this.myId.toString());\n    const urlQuery = `${this.url}?${params.toString()}`;\n    return this.http\n        .get(urlQuery, {responseType: 'text'})\n        .retry(3)\n        .catch((err: any) => {\n          return throwError('An error occurred:', err.error.message);\n        });\n    }\n\n  async generateConfig(){\n    try {\n      this.resultLink = await this.getConfig().toPromise();\n    }\n    catch (e){\n      console.log('error: ', e);\n      // handle exception\n    }\n  }\n\n  getProgress2<T>(dbId): Observable<string> {\n    let params = new HttpParams();\n    params = params.set('db_id', dbId);\n    const urlQuery = `${this.url2}?${params.toString()}`;\n    return this.http\n        .get(urlQuery, {responseType: 'text'})\n        .retry(3)\n        .catch((err: any) => {\n          return throwError('An error occurred:', err.error.message);\n        });\n  }\n\n  async getProgress(dbId){\n    try {\n      this.status = await this.getProgress2(dbId).toPromise();\n    }\n    catch (e){\n      console.log('error: ', e);\n      // handle exception\n    }\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UserInputService} from '../user-input.service';\nimport {PowerInputComponent} from '../power-input/power-input.component';\nimport {TaxData} from '../user-input.service';\nimport {ConfigService} from '../config.service';\n// import { Router } from '@angular/router';\nimport {NavBarComponent} from '../nav-bar/nav-bar.component';\n\n\n@Component({\n  selector: 'app-create-menubar',\n  templateUrl: './create-menubar.component.html',\n  styleUrls: ['./create-menubar.component.css']\n})\n\nexport class CreateMenubarComponent implements OnInit {\n  activeButton: string;\n  buttonClicked = null;\n  iconClicked = null;\n  taxon: TaxData;\n  @ViewChild(PowerInputComponent) powerInput;\n\n  constructor(\n      public UserInService: UserInputService,\n      private configService: ConfigService,\n      private navBar: NavBarComponent,\n      // private router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this.activeButton = 'power_input';\n    this.highlight('0');\n  }\n  // button highlight\n  highlight(id){\n    if (this.buttonClicked != null)\n      {\n        this.buttonClicked.style.background = 'white';\n        this.iconClicked.style.color = '#9E9E9E';\n      }\n    this.buttonClicked  = document.getElementById(id);\n    this.iconClicked = document.getElementById(id + '1');\n    this.buttonClicked.style.background =  '#106cc8';\n    this.iconClicked.style.color =  'white';\n    }\n\n// receive power-input event\n  receiveTaxEntry($event) {\n    this.taxon = $event;\n    this.taxon.name = this.taxon.name.replace(/ *\\(taxid:[^)]*\\)*/g, '');\n    this.UserInService.addTaxa(this.taxon);\n  }\n\n  // get all user input data from UserInputService\n  sendGetRequest(){\n    this.navBar.selectedTab = 1;\n    // this.router.navigate(['/result']);\n    this.configService.generateConfig().catch((err) => console.log('error: ', err));\n  }\n}\n","<mat-button-toggle-group id=\"create-menu-bar\" name=\"fontStyle\" aria-label=\"Font Style\" [(value)]=\"activeButton\">\n    <mat-button-toggle class=button_style id = \"0\" value=\"power_input\" (click)=\"highlight(0)\" matTooltip=\"provide\n    taxon name or ID\" matTooltipPosition=\"above\">\n        <mat-icon id=\"01\">font_download</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle class=button_style id = \"1\" value=\"list_input\" matTooltip=\"provide list of taxon IDs\"\n                       matTooltipPosition=\"above\" (click)=\"highlight(1)\">\n        <mat-icon id=\"11\">view_list</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle class=button_style id = \"2\" value=\"file_input\" matTooltip=\"provide file containing taxon IDs\"\n                       matTooltipPosition=\"above\" (click)=\"highlight(2)\">\n        <mat-icon id=\"21\">note_add</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle class=button_style id = \"3\" value=\"options\" matTooltip=\"customize your database\"\n                       matTooltipPosition=\"above\" (click)=\"highlight(3)\">\n        <mat-icon id=\"31\">build</mat-icon>\n    </mat-button-toggle>\n    <mat-button-toggle disabled>\n    </mat-button-toggle>\n    <mat-button-toggle value=\"underline\" matTooltip=\"submit and start database creation\" style=\"float: right;\"\n                       matTooltipPosition=\"above\" (click)=\"sendGetRequest()\" >\n        <mat-icon>send</mat-icon>\n    </mat-button-toggle>\n</mat-button-toggle-group>\n<div class=\"input_area\">\n    <ng-container *ngIf=\"activeButton==='power_input'\">\n        <app-power-input (messageEvent)=\"receiveTaxEntry($event)\"></app-power-input>\n    </ng-container>\n\n    <ng-container *ngIf=\"activeButton==='list_input'\">\n        <app-list-input></app-list-input>\n    </ng-container>\n\n    <ng-container *ngIf=\"activeButton==='file_input'\">\n        <app-file-input></app-file-input>\n    </ng-container>\n\n    <ng-container *ngIf=\"activeButton==='options'\">\n        <app-create-options></app-create-options>\n    </ng-container>\n</div>\n<div class=\"tax_table\">\n    <app-tax-table></app-tax-table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {UserInputService} from '../user-input.service';\nimport {NamesService} from '../names.service';\n\n@Component({\n    selector: 'app-create-options',\n    templateUrl: './create-options.component.html',\n    styleUrls: ['./create-options.component.css']\n})\nexport class CreateOptionsComponent implements OnInit {\n\n    constructor(\n        public UserInService: UserInputService,\n        private namesService: NamesService\n    ) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    // if rank is changed, keep selected taxIDs but show taxIDs for selected rank\n    async find_taxids(event) {\n        this.UserInService.rankedTaxa = [];\n        if (event.isUserInput) {\n            const rank = event.source.value;\n            if (rank === 'species') {\n                this.UserInService.shownTaxa = this.UserInService.selectedTaxa;\n                this.UserInService.sendTaxa();\n            } else {\n                for (const taxon of this.UserInService.selectedTaxa) {\n                    const taxiddata = await this.namesService.getIDs([taxon.taxid]);\n                    let taxonNew = taxiddata[0];\n                    // get parent ID until rank not 'no rank'\n                    while (taxonNew.rank === 'no rank') {\n                        const receiveData = await this.namesService.getIDs([taxonNew.parentid]);\n                        taxonNew = receiveData[0];\n                        if (taxonNew.taxid === 1){\n                            taxonNew.rank = 'root';\n                            console.log('Root reached');\n                        }\n                    }\n                    // if rank > user selected rank: ranked taxa = user input taxa\n                    if (this.UserInService.order.indexOf(taxonNew.rank) > this.UserInService.order.indexOf(rank)) {\n                        this.UserInService.rankedTaxa.push(taxiddata[0]);\n                    // if rank == selected rank, taxID = user input taxa\n                    } else if (this.UserInService.order.indexOf(taxonNew.rank) === this.UserInService.order.indexOf(rank)) {\n                        this.UserInService.rankedTaxa.push(taxonNew);\n                    // if rank < selected rank find next taxid with specified level\n                    } else {\n                        let lastTaxonWithSpecifiedLevel = taxonNew;\n                        while (this.UserInService.order.indexOf(taxonNew.rank) < this.UserInService.order.indexOf(rank)) {\n                            if (taxonNew.taxid === 1){\n                                taxonNew.rank = 'root';\n                                console.log('Root reached');\n                            }\n                            else if (taxonNew.rank !== 'no rank') {\n                                lastTaxonWithSpecifiedLevel = taxonNew;\n                                const receiveData = await this.namesService.getIDs([taxonNew.parentid]);\n                                taxonNew = receiveData[0];\n                            }\n                            else {\n                                const receiveData = await this.namesService.getIDs([taxonNew.parentid]);\n                                taxonNew = receiveData[0];\n                            }\n                        }\n                        // new taxon has specified rank\n                        if (this.UserInService.order.indexOf(taxonNew.rank) === this.UserInService.order.indexOf(rank)) {\n                            this.UserInService.rankedTaxa.push(taxonNew);\n                        }\n                        // new taxon has rank > specified rank (or root), push last specified\n                        if (this.UserInService.order.indexOf(taxonNew.rank) > this.UserInService.order.indexOf(rank)) {\n                            this.UserInService.rankedTaxa.push(lastTaxonWithSpecifiedLevel);\n                        }\n                    }\n                }\n                this.UserInService.set_to_set();\n                this.UserInService.shownTaxa = this.UserInService.rankedTaxa;\n                this.UserInService.sendTaxa();\n            }\n        }\n    }\n}\n","<mat-grid-list cols=\"3\" rowHeight='100px'>\n    <mat-grid-tile>\n        <div>\n            <mat-form-field>\n                <mat-label>Source</mat-label>\n                <mat-select [(ngModel)]=\"this.UserInService.selectedDatabase\">\n                    <mat-option value=\"option\"\n                                *ngFor=\"let database of this.UserInService.databases\"\n                                [value]=\"database\">\n                        {{database}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n        <div>\n            <mat-form-field>\n                <mat-label>Rank</mat-label>\n                <mat-select\n                        [(ngModel)]=\"this.UserInService.selectedRank\">\n                    <mat-option value=\"option\"\n                                *ngFor=\"let rank of this.UserInService.ranks\"\n                                [value]=\"rank\"\n                                (onSelectionChange)=\"find_taxids($event)\" >\n                        {{rank}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </mat-grid-tile>\n    <mat-grid-tile>\n        <div>\n            <div *ngIf=\"this.UserInService.selectedDatabase=='NCBI-nr'; then thenBlock else elseBlock\"></div>\n            <ng-template #thenBlock>\n                <mat-form-field>\n                    <mat-label>Type</mat-label>\n                    <mat-select [(ngModel)]=\"this.UserInService.selectedHeader\">\n                        <mat-option value=\"option\"\n                                    *ngFor=\"let option of this.UserInService.headerOptions\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n            <ng-template #elseBlock>\n                <mat-form-field>\n                    <mat-label>Type</mat-label>\n                    <mat-select [(ngModel)]=\"this.UserInService.selectedRedundant\">\n                        <mat-option value=\"option\"\n                                    *ngFor=\"let option of this.UserInService.redundantOptions\" [value]=\"option\">\n                            {{option}}\n                        </mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </ng-template>\n        </div>\n    </mat-grid-tile>\n</mat-grid-list>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n\n  constructor(\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div>\n    <app-create-menubar></app-create-menubar>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './example.component.html',\n  styleUrls: ['./example.component.css']\n})\nexport class ExampleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2> Example 1: Generate protein database using Uniprot database and unchanged rank</h2>\n<h3>Tax2proteome run for a metaproteome sample containing species highly represented in the protein databases</h3>\n<p>Sample composition: Escherichia coli (taxid: 562), Yerisina pseudotuberculosis (taxid:633),\n    unknown species of the Rhizobium (taxid: 379) and Salmonella (taxid: 590) genus, and some viruses of the\n    Coronaviridae (taxid: 11118) family are assumed. </p>\n<h3>1. Select taxa for database selection by taxon IDs or name by different methods: </h3>\n<p> The taxon IDs of species or of a certain rank can be determined here: <a href=\"https://www.ncbi.nlm.nih.gov/taxonomy\"> NCBI Taxonomy </a></p>\n<p><b>Input by name or taxon ID search: </b><br>\n    <img src=\"../assets/Screenshot_autocomplete.png\"  alt=\"pic_auto\" style=\"width:50%;height:20%;\">\n</p>\n<p><b>Input by taxon IDs. Separated by comma, space, semicolon or new line: </b><br>\n    <img src=\"../assets/Screenshot_taxidlist.png\"  alt=\"pic_list\" style=\"width:50%;height:20%;\">\n</p>\n<p><b>Input by upload file. All numbers contained in the file are extracted as taxon IDs: </b><br>\n    <img src=\"../assets/Screenshot_upload.png\"  alt=\"pic_upload\" style=\"width:50%;height:20%;\">\n</p>\n<h3>2. Select Options </h3>\n<h4>Option database selection</h4>\n<p>Chose one of the following databases: Uniprot, NCBI-nr, Swissprot. Tax2Proteome selects all sequences\n    according the given taxa from one of these databases. Since the sample contains E.coli and Salmonella, which\n    are high represented in the databases, the smaller Uniprot Database is chosen.<br>\n    <img src=\"../assets/Screenshot_db_options.png\"  alt=\"pic_db\" style=\"width:50%;height:20%;\">\n</p>\n<h4>Option rank selection</h4>\n<p>Chose rank, the higher, the more protein sequences are contained in the resulting database. Here option species is chosen,\n    so that the defined rank by user given taxon IDs remains unchanged. For high represented species like Salmonella and E.coli\n    a rank increase is unnecessary and decreases the identification rate.<br>\n    <img src=\"../assets/Screenshot_rank_options.png\"  alt=\"pic_rank\" style=\"width:50%;height:20%;\">\n</p>\n<h4>Option for databases selected from the Uniprot or Swissprot protein databases</h4>\n<p>Option non-redundant merges all redundant sequences to one with concatenated fasta headers.\n    The search engine matching results are improved by using non-redundant databases, so use it!<br>\n    <img src=\"../assets/Screenshot_redundant_options.png\"  alt=\"pic_redundant\" style=\"width:50%;height:20%;\">\n</p>\n<h3>3. Control input taxa </h3>\n<p>Control the selected taxa and ranks in the input table. If taxa with higher rank as specified in options are\n    given by the user, they stay unchanged.<br>\n    <img src=\"../assets/Screenshot_table.png\"  alt=\"pic_table\" style=\"width:50%;height:20%;\">\n</p>\n<h3>4. Send your request for generating a protein sequence database based on public sequence databases accordingly to\n    your chosen taxa and options. </h3>\n<p>    push the  <mat-icon class=\"icon\">send</mat-icon>   button </p>\n\n<p>    You get your database ID here: </p>\n<p>\n    <img src=\"../assets/check_status.png\"  alt=\"progress\" style=\"width:50%;height:20%;\">\n</p>\n<h3>5. Check progress of database creation.</h3>\n<p>Depending on server workload, the database creation can take up to one day, but mostly it will take only few minutes.\n    You can check the status of your customized database in the progress tab, using the (in 4.) provided database ID. <br>\n    <img src=\"../assets/check_status_queued.png\"  alt=\"pic_queued\" style=\"width:50%;height:20%;\"><br>\n    <img src=\"../assets/check_status_running.png\"  alt=\"pic_running\" style=\"width:50%;height:20%;\">\n</p>\n<h3>6. Download your specified database by link.</h3>\n<p>\n    For database download follow the download link provided by the browser after checking progress returns status 01 - download ready. <br>\n    <img src=\"../assets/check_status_ready.png\"  alt=\"pic_link\" style=\"width:50%;height:20%;\">\n</p>\n\n\n\n<h2> Example 2: Generate protein database using NCBI-nr database and genus rank</h2>\n<h3>Tax2Proteome run for species with low database representation.  </h3>\n<p>Sample composition: Cupriavidus metallidurans (taxid: 119219), Rhodotorula glutinis (taxid: 5535)</p>\n<h3>1. Select taxa for database selection by taxon IDs or name by one (or more) of the different possibilities: </h3>\n<p>For taxa input use one of the following input options: <mat-icon class=\"icon2\">font_download</mat-icon>  or  <mat-icon class=\"icon2\">view_list</mat-icon>  or  <mat-icon class=\"icon2\">note_add</mat-icon>\n</p>\n<p>Example input by taxon IDs separated by comma, space, semicolon, or new line: <br>\n    <img src=\"../assets/Screenshot_taxidlist2.png\"  alt=\"pic_list2\" style=\"width:50%;height:20%;\">\n</p>\n<h3>2. Select Options </h3>\n<h4>Option database selection</h4>\n<p>Chose one of the following databases: Uniprot, NCBI-nr, Swissprot. Tax2Proteome selects all sequences\n    according the given taxa from one of these databases. Since the sample contains only rare species, which\n    are low represented in the databases, the bigger NCBI Database is chosen.<br>\n    <img src=\"../assets/Screenshot_db_options2.png\"  alt=\"pic_db2\" style=\"width:50%;height:20%;\">\n</p>\n<h4>Option rank selection</h4>\n<p>Chose rank, the higher, the more protein sequences contained in the resulting database.Here option genus is chosen.\n    Since the requested species are only poorly investigated, they have only few entries in the public protein databases.\n    The identification can profit from including sequences of related species.<br>\n    <img src=\"../assets/Screenshot_rank_options2.png\"  alt=\"pic_rank2\" style=\"width:50%;height:20%;\">\n</p>\n<h4>Options for databases selected from the NCBI-nr protein database</h4>\n<p>Option 'reduced headers' reduces the NCBI fasta-headers to their accession IDs. This reduces the memory requirement up to 50 %.<br>\n    <img src=\"../assets/Screenshot_header_options2.png\"  alt=\"pic_header\" style=\"width:50%;height:20%;\">\n</p>\n<h3>3. Control input taxa </h3>\n<p>Control the selected taxa and ranks in the input table.<br>\n    <img src=\"../assets/Screenshot_table2.png\"  alt=\"pic_table2\" style=\"width:50%;height:20%;\">\n</p>\n    <h3>4. Send your request for generating a protein sequence database based on public sequence databases accordingly to\n        your chosen taxa and options. </h3>\n    <p>    push the  <mat-icon class=\"icon\">send</mat-icon>   button </p>\n\n    <p>    You get your database ID here: </p>\n    <p>\n        <img src=\"../assets/check_status.png\"  alt=\"progress\" style=\"width:50%;height:20%;\">\n    </p>\n    <h3>5. Check progress of database creation.</h3>\n    <p>Depending on server workload, the database creation can take up to one day, but mostly it will take only few minutes.\n        You can check the status of your customized database in the progress tab, using the (in 4.) provided database ID. <br>\n        <img src=\"../assets/check_status_queued.png\"  alt=\"pic_queued\" style=\"width:50%;height:20%;\"><br>\n        <img src=\"../assets/check_status_running.png\"  alt=\"pic_running\" style=\"width:50%;height:20%;\">\n    </p>\n    <h3>6. Download your specified database by link.</h3>\n    <p>\n        For database download follow the download link provided by the browser after checking progress returns status 01 - download ready. <br>\n        <img src=\"../assets/check_status_ready.png\"  alt=\"pic_link\" style=\"width:50%;height:20%;\">\n    </p>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\nexport class FaqComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<h1>FAQ</h1>\n<h2>How should I assemble my database?</h2>\n<p>You should know your sample composition or make a good estimate. With known taxon IDs you can use tax2proteome to select\n    all protein sequences from the public protein databases from NCBI or UNiProtKB. Taxon IDs can be determined using the NCBI Taxonomy website\n    <a href=\"https://www.ncbi.nlm.nih.gov/taxonomy\"> (https://www.ncbi.nlm.nih.gov/taxonomy)</a> or using the search field.<br>\nFor including the determined taxa use one of the following options or a combination of them:<br>\n    <mat-icon class=\"icon\">font_download</mat-icon>  Text search with name or taxon ID.<br>\n    <mat-icon class=\"icon\">view_list</mat-icon> Enter multiple taxon IDs seperated by space, comma or line break.<br>\n    <mat-icon class=\"icon\">note_add</mat-icon> File Upload (extracts all contained numbers). Only .csv, .tsv and .txt files allowed. <br><br>\nDepending on your analyzed sample, you can choose one of the public protein databases and a taxonomic rank.\nSee also FAQ\n   <a href=\"#A1\">Which database should I use?</a>\nand\n    <a href=\"#A2\">Which taxonomic rank should I use?</a> .\n</p>\n\n<h2 id=\"A1\">Which database should I use?</h2>\n<p>The most important public protein databases are the UniProt Knowledgebase (UniProtKB) database\n    (https://www.uniprot.org/uniprot/) (2019) and the National Center for Biotechnology Information (NCBI)\n    non-redundant database (https://www.ncbi.nlm.nih.gov/protein).\n\n<p>  <b>NCBI-nr</b> <br>\n    The NCBI non-redundant database is a collection of sequences from several sources including UniProtKB. It is the biggest public protein database with approximately\n    220 million entries (database state 09.09.2019).\n</p>\n<p>   <b>UniProt</b><br>\n    The UniProtKB database is composed of the Swiss-Prot and TrEMBL databases and contains about 172 million sequence\n    entries (database state 09.09.2019). The combination of both is called Uniprot by this tool. The protein\n    sequences originate from translations of coding sequences (CDS) submitted to the EMBL-Bank/GenBank/DDBJ nucleotide sequence resources.</p>\n<p>   <b>SwissProt</b><br>\n    Swiss-Prot is the manually curated section of UniProtKB with minimal redundancy and contains about half a million\n    fasta entries (database state 09.09.2019). It is recommended as resource for microbial sequences only for model organisms.\n</p>\n<p>   <b>Recommandation</b><br>\n    Important for your database choice is the size of the expected database. If your sample contains many\n    different organism and/or model organisms with huge database representation, we recommend to use the\n    UniProt database. In our example samples, the UniProt selected databases contained up to 40 % less sequences,\n    which improves the identification rates. If the databases size becomes too large, the identification rate will decrease.\n    For rare species the NCBI-nr database may contain more relevant sequences.\n    </p>\n\n<h2 id=\"A2\">Which taxonomic rank should I use?</h2>\n<p>Only a small proportion of organisms is fully sequenced so far. Currently only for model organisms or medically\n    interesting species public protein sequence databases can be considered reasonably representative. If your organisms\n    belong to one of these, you should use the rank ‘species’. If the analyzed species are poorly represented in the\n    public protein databases, increasing the rank (e.g. to 'genus' or 'family') may increase the sequence coverage by\n    including sequences of related species. However, this should be carefully considered, since an increase in the\n    database size is often accompanied by a decrease in the identification rate.\n    The entire bacterial superkingdom database (taxon ID = 2) from Uniprot or NCBI-nr is too large for the most\n    search engines and should never be used. The more specific the database is and the better the sequence coverage,\n    the better are the spectral matching results.</p>\n\n<h2 id=\"A3\">What is the difference between 'reduced headers' and 'full headers' options?</h2>\n<p>This option is only available for  NCBI-nr selected databases to reduce the database size. If the ‘reduced headers’ option is\nchosen, the often enormous headers of NCBI non-redundant database, which contain all redundant sequence headers\nconcatenated, are reduced to their accession IDs. This reduces the memory requirements for the generated database by up to 50 % or more.<br>\n    Separator of different accession IDs: SOH (\\x01) <br>\n    An assignment of the accession IDs to their corresponding taxa is possible using the prot.accession2taxid and pdb.accession2taxid files from NCBI.<br>\n    <a href=\"ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/prot.accession2taxid.gz\">ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/prot.accession2taxid.gz</a> <br>\n    <a href=\"ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/pdb.accession2taxid.gz\">ftp.ncbi.nlm.nih.gov/pub/taxonomy/accession2taxid/pdb.accession2taxid.gz</a> <br>\n\n</p>\n<p><b>Example:</b><br>\n<u>original NCBI-nr fasta entry:</u><br>\n>WP_02.1 50S ribosomal protein L14 #NP_4.1 30S ribosomal protein S18 [halophilic eubacterium NRCC 41227]#NP_5.2\nRecName: Full=30S ribosomal protein [Salmonella enterica subsp. diarizonae serovar 38:[k]:-]#NP_6.2\nRecName: Full=30S ribosomal protein[Methylophilus]<br>\nMAYRKLGRTSSQRKAMLRDLTTDLLINESIVTTEARAKEIRKTVEKMITLGKRGDLHARR<br>\nQAAAYVRNEIASENYDEATDKYTSTTALQKLFSEIAPRYAERNGGYTRILKTEPRRGDAA<br>\nPMAIIELV<br>\n<u>NCBI-nr fasta entry with reduced headers:</u><br>\n>WP_02.1#NP_4.1#NP_5.2#NP_6.2<br>\nMAYRKLGRTSSQRKAMLRDLTTDLLINESIVTTEARAKEIRKTVEKMITLGKRGDLHARR<br>\nQAAAYVRNEIASENYDEATDKYTSTTALQKLFSEIAPRYAERNGGYTRILKTEPRRGDAA<br>\nPMAIIELV\n\n<h2 id=\"A4\">Should I use the non-redundant option?</h2>\n<p>This option is only available for Uniprot or Swissprot selected databases. The non-redundant option merges UniprotKB\n    database fasta entries with same sequence into one entry with concatenated headers. Header seperator SOH (\\x01) <br>\n    You should use it!<br>\n    <b>Example</b> <br>\n    <u>Redundant UniProtKB protein sequence entries: </u><br>\n    >tr|L0AQC3|L0AQC3_9EURY Coenzyme-B sulfoethylthiotransferase (Fragment) OS=uncultured Methanomicrobiales archaeon OX=183760 GN=mcrA PE=3 SV=1<br>\n    AAVADLAFAAKHAGVIQMGDILPARRARGPNEPGGIKFGHFADMIQADRKYPNDPARATL<br>\n    EVVGAGAMLFDQIWLGSYMSGGVGFTQYATAAYTDNILDDYTYYGMDYIKSKYKVNWQSP<br>\n    SEKDKVKATQDVVNDIATEVNLYGMEQYEQYPTALEDHFG<br>\n    >tr|XXX|YYY Coenzyme (Fragment) OS=uncultured archaeon FIN637 OX=79780 GN=mcrA PE=3 SV=1<br>\n    AAVADLAFAAKHAGVIQMGDILPARRARGPNEPGGIKFGHFADMIQADRKYPNDPARATL<br>\n    EVVGAGAMLFDQIWLGSYMSGGVGFTQYATAAYTDNILDDYTYYGMDYIKSKYKVNWQSP<br>\n    SEKDKVKATQDVVNDIATEVNLYGMEQYEQYPTALEDHFG<br>\n    <u>redundant sequences merged to one sequence with concatenated headers</u>:<br>\n    tr|L0AQC3|L0AQC3_9EURY Coenzyme-B sulfoethylthiotransferase (Fragment) OS=uncultured Methanomicrobiales archaeon\n    OX=183760 GN=mcrA PE=3 SV=1 # tr|XXX|YYY Coenzyme (Fragment) OS=uncultured archaeon FIN637 OX=79780 GN=mcrA PE=3 SV=1<br>\n    AAVADLAFAAKHAGVIQMGDILPARRARGPNEPGGIKFGHFADMIQADRKYPNDPARATL<br>\n    EVVGAGAMLFDQIWLGSYMSGGVGFTQYATAAYTDNILDDYTYYGMDYIKSKYKVNWQSP<br>\n    SEKDKVKATQDVVNDIATEVNLYGMEQYEQYPTALEDHFG<br>\n</p>\n\n<h2 id=\"A5\">How do I get my specified database?</h2>\n<p> use download link. </p>\n","import { Component, OnInit } from '@angular/core';\nimport {NamesService} from '../names.service';\n\n@Component({\n  selector: 'app-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.css']\n})\nexport class FileInputComponent implements OnInit {\n\n  fileName = 'No file selected';\n\n  constructor(\n      private namesService: NamesService,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  // upload function\n  openFile(event) {\n    if (event.target.files[0].size > 307200){\n      alert('File is too big!');\n      return;\n    }\n    if (event.target.files.length > 0)\n    {\n      this.fileName = event.target.files[0].name;\n    }\n    else {this.fileName = 'more than one file selected'}\n    const input = event.target;\n    for (let index = 0; index < input.files.length; index++) {\n      const reader = new FileReader();\n      reader.readAsText(input.files[index]);\n      reader.onload = () => {\n        // this 'text' is the content of the file\n        const text = reader.result;\n        if (typeof text === 'string') {\n          const textList = text.split(/,|\\n|\\t/).map(Number).filter(Boolean);\n          const taxObject = this.namesService.getNames(textList).catch((err) => console.log('error: ', err));\n        }\n      };\n    }\n  }\n}\n","<button mat-raised-button (click)=\"fileInput.click()\" class=\"button\">\n    <fa-icon [icon]=\"['fas', 'upload']\" ></fa-icon>\n    <span>   Choose a file…</span>\n    <input\n        #fileInput\n        type=\"file\"\n        (change)='openFile($event)'\n        style=\"display:none;\"\n        accept=\".csv, .tsv, .txt\"/>\n</button>\n<span class=\"file-name\">\n            {{ fileName }}\n</span>\n\n","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-page-footer',\n  templateUrl: './page-footer.html',\n  styleUrls: ['./page-footer.css']\n})\nexport class FooterComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"footer p-4\">\n  <ul>\n    <li>Tax2Proteome</li>\n    <li><a href=\"/\">Start page</a></li>\n    <li><a href=\"/termsofservice\">Terms of Service</a></li>\n    <li><a href=\"/privacypolicy\">Privacy Policy</a></li>\n    <li><a href=\"/impressum\">Impressum</a></li>\n  </ul>\n  <ul>\n    <li>Funding & Support</li>\n    <li><a href=\"http://www.dfg.de\">DFG</a></li>\n    <li><a href=\"http://www.denbi.de\">deNBI</a></li>\n    <li><a href=\"https://www.denbi.de/cloud\">deNBI Cloud</a></li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-impress',\n  templateUrl: './impress.component.html',\n  styleUrls: ['./impress.component.css']\n})\nexport class ImpressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n\n<h3><b>Information according to § 5 German Telemedia Act:</b></h3>\n\n<p>Anna-Juliane Schmachtenberg<br>\n    Hasso-Plattner-Institut, Digital Engineering Faculty, University of Potsdam <br>\n    Prof.-Dr.-Helmert-Str. 2-3 <br>\n    14482 Potsdam<br>\n    Germany<br>\n13353 Berlin</p>\n\n\n<h3><b>Contact:</b></h3>\n<p>e-mail: anna-juliane.schmachtenberg@hpi.de<p>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {NamesService} from '../names.service';\n\n@Component({\n  selector: 'app-list-input',\n  templateUrl: './list-input.component.html',\n  styleUrls: ['./list-input.component.css']\n})\nexport class ListInputComponent implements OnInit {\n\n  @ViewChild('bindingInput') bindingInput: ElementRef;\n\n  constructor(\n      private namesService: NamesService,\n  ) { }\n\n  ngOnInit(): void { }\n\n  getTaxIDValue(): any {\n    const splitted = this.bindingInput.nativeElement.value.split(/\\s*[,;]\\s*|\\s/).map(Number).filter(Boolean);\n    this.namesService.getNames(splitted).catch((err) => console.log('error: ', err));\n  }\n}\n","<div style=\"align-content:  center\">\n    <label>\n        <textarea class=\"form\" matInputclass=\"text\" value=\"\" #bindingInput></textarea>\n    </label>\n    <button mat-mini-fab matTooltip=\"Add taxon IDs\" class=\"icon\" (click)=\"getTaxIDValue()\">\n        <mat-icon style=\"color:white; size: 20px\"> add </mat-icon>\n    </button>\n</div>","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/retry';\nimport {UserInputService, TaxData, TaxIDData} from './user-input.service';\n\n// communication with taxid database\n// get taxa names --> call add_taxa() in user-input.service (update table, but this do not work)\n// or parent taxa IDs\n@Injectable()\nexport class NamesService {\n\n  // db_result: 172.16.103.175\n  private baseUrl = 'https://tax2proteome.de/api/mquery.php';\n  // private baseUrl = \"http://localhost:8000/tax2proteome/rest_tax2proteome/mquery.php\"\n  private Url2 = 'https://tax2proteome.de/api/pquery.php';\n  // private Url2 = \"http://localhost:8000/rest_tax2proteome/pquery.php\"\n\n  constructor(\n    private http: HttpClient,\n    private userInputService: UserInputService,\n  ) { }\n\n  fetchNames<T>(taxids: number[]): Observable<T> {\n      let params = new HttpParams();\n      params = params.set('id', taxids.toString());\n      console.log(`${this.baseUrl}?${params.toString()}`);\n      return this.http\n          .get<T>(`${this.baseUrl}?${params.toString()}`)\n          .retry(3)\n          .catch((err: any) => {\n              return throwError('An error occurred in fetchNames:', err.error.message);\n          });\n  }\n  async getNames(taxids: number[]){\n      try {\n          const receivedData = await this.fetchNames(taxids).toPromise();\n          const receivedData2 = receivedData as TaxData[];\n          receivedData2.forEach((entry) => {\n              entry.name = entry.name.replace(/ *\\(taxid:[^)]*\\)*/g, '');\n              this.userInputService.addTaxa(entry);\n              return(entry);\n          });\n      }\n      catch (e){\n          console.log('error: ', e);\n          // handle exception\n      }\n  }\n  fetchParentIDs<T>(taxids: number[]): Observable<T> {\n      let params = new HttpParams();\n      params = params.set('id', taxids.toString());\n      return this.http\n          .get<T>(`${this.Url2}?${params.toString()}`)\n          .retry(3)\n          .catch((err: any) => {\n              return throwError('An error occurred in fetch IDs:', err.error.message);\n            });\n  }\n\n  async getIDs(taxids: number[]): Promise<TaxIDData[]>{\n      try{\n          const receivedData = await this.fetchParentIDs(taxids).toPromise();\n          const receivedData2 = receivedData as TaxIDData[];\n          receivedData2.forEach((entry) => {\n              entry.name = entry.name.replace(/ *\\(taxid:[^)]*\\)*/g, '');\n\n          });\n          return receivedData2;\n      }\n      catch (e){\n          console.log('error: ', e);\n          // handle exception\n      }\n  }\n\n}\n\n\n// requestNewJob(): void {\n//     // request new job creates a job with status 0 now, status 1 when files are send (start job method)\n//     this.jsonUpload.postObj<ProphaneJobObject>(this.currentProphaneJob, 'mpacloud/v1/prophaneRequestJob').subscribe(res => {\n//         this.currentProphaneJob = res;\n//         // this.prophaneJobIDReady = !(this.currentProphaneJob.prophaneJobUUID === '');\n//         // TODO: obsolete? --> rework\n//         if (res.status === 'JOB_REJECTED') {\n//             this.jobUnavailable = true;\n//         } else {\n//             this.jobUnavailable = false;\n//         }\n//     });\n//\n//     postObj<T>(obj: T, api: string): Observable<T> {\n//         console.log('IDPROVIDER: ' + this.authGuard.getIdProvider())\n//         httpOptions.headers = new HttpHeaders({\n//             'Content-Type': 'application/json',\n//             'Authorization': this.authGuard.getUserAuthorization(),\n//         });\n//         return this.http.post<T>(this.webserver.getwebserverurl() + api, obj, httpOptions);\n//     }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n  selectedTab: number;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-tab-group [selectedIndex]=\"selectedTab\">\n    <mat-tab label=\"create\" dynamicHeight>\n        <ng-template matTabContent>\n            <div class=\"content\">\n                <router-outlet></router-outlet>\n            </div>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"progress\" dynamicHeight>\n        <ng-template matTabContent>\n            <div class=\"content\">\n                <app-result-page></app-result-page>\n            </div>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"example\" dynamicHeight>\n        <ng-template matTabContent>\n            <div class=\"content\">\n                <app-example></app-example>\n            </div>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"faq\" dynamicHeight>\n        <ng-template matTabContent>\n            <div class=\"content\">\n                <app-faq></app-faq>\n            </div>\n        </ng-template>\n    </mat-tab>\n</mat-tab-group>\n","import { Component, OnInit,  } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { debounceTime, tap, switchMap, finalize } from 'rxjs/operators';\nimport { Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-power-input',\n  templateUrl: './power-input.component.html',\n  styleUrls: ['./power-input.component.css']\n})\nexport class PowerInputComponent implements OnInit {\n    searchTaxonCtrl = new FormControl();\n    filteredTaxa: any;\n    isLoading = false;\n    errorMsg: string;\n\n    private url = 'https://tax2proteome.de/api/query.php?q=';\n    // private url =  \"http:///localhost:8000/tax2proteome/rest_tax2proteome/query.php?q=\"\n    @Output() messageEvent = new EventEmitter<string>();\n\n    constructor(\n        private http: HttpClient,\n    ) {\n    }\n\n    ngOnInit() {\n        this.searchTaxonCtrl.valueChanges\n            .pipe(\n                debounceTime(500),\n                tap(() => {\n                    this.errorMsg = '';\n                    this.filteredTaxa = [];\n                    this.isLoading = true;\n                }),\n                switchMap(value => this.http.get( this.url + value + '&limit=5')\n                    .pipe(\n                        finalize(() => {\n                            this.isLoading = false\n                        }),\n                    )\n                )\n            )\n            .subscribe(data => {\n                this.errorMsg = '';\n                this.filteredTaxa = data;\n            });\n    }\n\n    displayName(taxon: { taxid: number, name: string }): string {\n        return taxon && taxon.name ? taxon.name : '';\n    }\n\n    sendTaxEntry(selectedTaxon) {\n        this.searchTaxonCtrl.setValue('');\n        this.messageEvent.emit(selectedTaxon);\n    }\n}\n","<mat-form-field>\n    <input matInput placeholder=\"Add taxon by scientific name or id\" aria-label=\"State\" [matAutocomplete]=\"auto\"\n        [formControl]=\"searchTaxonCtrl\">\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)='sendTaxEntry($event.option.value)'\n        [displayWith]=\"displayName\">\n        <mat-option *ngIf=\"isLoading\" class=\"is-loading\">Loading...</mat-option>\n        <ng-container *ngIf=\"!isLoading\">\n            <mat-option *ngFor=\"let taxon of filteredTaxa\" [value]=\"taxon\">\n                <span>{{taxon.name}}</span>\n            </mat-option>\n        </ng-container>\n    </mat-autocomplete>\n</mat-form-field>","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\n\n@Component({\n  selector: 'app-privacy-consent-banner',\n  templateUrl: './privacy-consent-banner.component.html',\n  styleUrls: ['./privacy-consent-banner.component.css'],\n  animations: [\n    trigger('policyConsent', [\n      state('initial', style({\n        backgroundColor: '#001933',\n        height: '0px',\n        overflow: 'hidden',\n      })),\n      state('final', style({\n        backgroundColor: '#001933',\n        width: '100%',\n        height: '100px',\n      })),\n      transition('initial=>final', animate('300ms 500ms ease-in')),\n      transition('final=>initial', animate('0ms 500ms ease-out'))\n    ])]\n})\n\nexport class PrivacyConsentBannerComponent implements OnInit, AfterViewInit{\n\n  consentDialogStatus = 'initial';\n  // 30\n  expiryDays = 0;\n\n  constructor() {\n  }\n\n  showBanner() {\n    this.consentDialogStatus = 'final';\n  }\n\n  hideBanner() {\n    this.consentDialogStatus = 'initial';\n  }\n\n  getCurrentTimestamp() {\n    return new Date().getTime();\n  }\n\n  isExpired(timestamp) {\n    return this.getCurrentTimestamp() - timestamp >= this.expiryDays * 86400000;\n  }\n\n  hasConsented() {\n    const value = localStorage.getItem('tax2proteome_policy_consent');\n    return !(value === null || this.isExpired(parseInt(value)));\n  }\n\n  consent() {\n    this.setConsent();\n    this.hideBanner();\n  }\n\n  setConsent() {\n    localStorage.setItem('tax2proteome_policy_consent', this.getCurrentTimestamp().toString());\n  }\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    if (!this.hasConsented() && this.consentDialogStatus === 'initial') {\n      this.showBanner();\n    }\n  }\n}\n","<div [@policyConsent]=consentDialogStatus class=\"consent-wrapper\">\n  <div class=\"policy-consent\">\n      <span>\n        This website uses only functional cookies for an optimal user experience. By using our website, you acknowledge that you have\n        read, understood and agree to our <a href=\"/termsofservice\">Terms of Use</a> and <a href=\"/privacypolicy\">Privacy Policy</a>.\n      </span>\n    <span>\n        <button mat-flat-button class=\"cc-allow\" (click)=\"consent()\">Accept</button>\n      </span>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy-page',\n  templateUrl: './privacy-policy-page.component.html',\n  styleUrls: ['./privacy-policy-page.component.css']\n})\nexport class PrivacyPolicyPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"legal-text\">\n  <h1>Tax2Proteome</h1>\n  <h2>Privacy Policy</h2>\n  <h3>1. Introductory Remarks</h3>\n    This page is used to inform website visitors regarding our policies with the collection, use, and disclosure of\n  personal data if anyone decided to use our Service, the Tax2Proteome website (https://www.tax2proteome.de).\n    Personal data is information that makes it possible to identify a person. In addition to direct personal information,\n  such as name, date of birth or telephone number or IP address, this also includes data on personal characteristics,\n  beliefs or relationships that allow a conclusion to be drawn about a specific person.\n    The operators of these pages take the protection of your personal data very seriously. We treat your personal data\n  confidentially and according to the legal data protection regulations as well as this Privacy Policy.\n    If you choose to use our Service, then you agree to the collection and use of information in relation with this policy.\n  The personal information that we collect are used for providing and improving the Service. We will not use or share\n  your information with anyone except as described in this Privacy Policy. We would like to point out that the data\n  transmission on the Internet (e.g. communication by e-mail) can have security gaps. A complete protection of data\n  against access by third parties is not possible.\n  <h3>2. General Information on Data Processing</h3>\n    As a matter of principle, we collect and use personal data of our users only to the extent necessary for providing\n  a functional website and service and as the legal requirements allow.\n  <h3>3. Contact Details</h3>\n    Faculty of Process & Systems Engineering\n    Universitätsplatz 2\n    39106 Magdeburg\n    Germany\n  <h3>4. Data Protection officer</h3>\n    Juliane Schmachtenberg\n  <h3>5. Purpose</h3>\n    The purpose of the Tax2Proteome service is to provide an automated protein database generation based on the public\n    protein databases of NCBI and UniProtKB. For this, users can define the taxa to be included, the database and level\n    of the generated database. The generated databases are provided as file downloads.\n  <h3>6. Scope of Data Processing</h3>\n  <h4>Storage of Browser Data</h4>\n    Whenever you visit our website, our system automatically collects data and information from the computer system of\n    the calling computer. The following data is collected:\n  <ul>\n    <li>Information about the browser type and the version used</li>\n    <li>The user's operating system</li>\n    <li>The Internet service provider of the user</li>\n    <li>The IP address of the user</li>\n    <li>Date and time of access</li>\n    <li>Websites from which the user's system accesses our website</li>\n    <li>Visited domain</li>\n    <li>Timestamp of the visit</li>\n    <li>Status code</li>\n    <li>Size of the response body</li>\n    <li>Referrer sent by the client</li>\n    <li>User agent sent by the client</li>\n  </ul>\n  The data is also stored in the log files of our system, but not linked with any other personal data of the user.\n  The temporary storage of the IP address by the system is necessary to enable the website to be delivered to the\n  user's computer. For this purpose, the user's IP address must remain stored for the duration of the session.\n  The storage in log files is done to ensure the functionality of the website. In addition, the data is used to optimize\n  the website and to ensure the security of our information technology systems.\n  An evaluation of the data for marketing purposes does not take place in this context.\n  The data is deleted when the respective session is ended.\n  If the data is stored in log files, it will be deleted after seven days at the latest.\n  <h4>Storage of Uploaded Data</h4>\n  Whenever you start an analysis, analysis parameters defined have to be uploaded (e.g. taxa IDs) and are stored on the server.\n  No personal data of the user are stored.\n  The duration of data storage depends on the workload of the service and user actions.\n  All uploaded data will be deleted if the analysis has be succesfully ended or failed.\n  However, the following analysis data is collected in any case:\n  <ul>\n    <li>All analysis parameter as entered in the job submission form</li>\n  </ul>\n  The data is also stored in the log files of our system. In case of failed analyses, only log files are stored for 4 weeks\n  to support debugging and restoring the functionality of the service.\n  For successfully ended analyses only results are stored for a maximum of 1 months.\n  <h4>Use of Cookies</h4>\n  Our website uses only functional cookies. Cookies are text files that are stored in or by the internet browser on the user's computer system.\n  If a user visitis a website, a cookie can be stored on the user's operating system.\n  This cookie contains a characteristic string of characters that enables the browser to be uniquely identified when the website is visited again.\n  We use cookies to make our website more user-friendly. Some elements of our website require the calling browser to be\n  able to be identified even after a page change. The following data is stored and transmitted in the cookies:\n  <ul>\n    <li>Log-in information</li>\n    <li>Session settings</li>\n  </ul>\n  The purpose of using technically necessary cookies is to increase usability of websites for our users.\n  Some functions of our website cannot be offered without the use of cookies. For these it is necessary that the browser\n  is recognized even after a page change. The user data collected by technically necessary cookies is not used to create user profiles.\n  Cookies are stored on the user's computer and are transmitted from there to our site.\n  Therefore, you as a user have full control over the use of cookies.\n  By changing the settings in your internet browser, you can deactivate or restrict the transmission of cookies.\n  Cookies already stored can be deleted at any time. This can also be done automatically.\n  If cookies for our website are deactivated, it is possible that not all functions of the website can be used to their full extent.\n  <h4>Web analysis using Matomo</h4>\n  The web analysis software evaluates the following data about the visit of a web service for the creation of statistics:\n  <ul>\n    <li>Web page/address called up</li>\n    <li>anonymised IP address</li>\n    <li>Date and time of page view</li>\n    <li>data volume retrieved</li>\n    <li>Website or search engine</li>\n  </ul>\n  The data is used to improve our service based on usage.\n  <h3>7. External Links</h3>\n  Our Service may contain links to other sites. If you click on a third-party link, you will be directed to that site.\n  Note that these external sites are not operated by us. Therefore, we strongly advise you to review the Privacy Policy\n  of these websites. We have no control over, and assume no responsibility for the content, privacy policies, or\n  practices of any third-party sites or services.\n  <h3>8. Children’s Privacy</h3>\n  Our Services do not address anyone under the age of 18. We do not knowingly collect personal data from children under 13.\n  In the case we discover that a child under 18 has provided us with personal data, we immediately delete this from our servers.\n  If you are a parent or guardian and you are aware that your child has provided us with personal information,\n  please contact us so that we will be able to do necessary actions.\n  <h3>9. Your Rights</h3>\n  As a person concerned, you may at any time exercise the rights granted to you by the EU-DSGVO, insofar as they apply to the processing:\n  <ul>\n    <li>the right to be informed whether and which of your data are being processed (Art. 15 DSGVO)</li>\n    <li>the right to request the correction or completion of data concerning you (Art. 16 DSGVO)</li>\n    <li>the right to have data relating to you deleted in accordance with Art. 17 DSGVO</li>\n    <li>the right to request, in accordance with Art. 18 DPA, a restriction on the processing of data</li>\n    <li>the right to object to future processing of data concerning you in accordance with Art. 21 DPA</li>\n  </ul>\n  The collection of data for the provision of the web offer and the storage of the data in log files is mandatory for\n  the operation of the web pages. There is therefore no possibility of objection on the part of the user.\n  Although IP addresses are regarded as personal data, they are not assigned to any person, so they cannot be assigned to\n  any user and therefore cannot be accessed when information is requested.\n  In addition to the aforementioned rights, you have the right to lodge a complaint with the data protection\n  supervisory authority (Art. 77 DSGVO).\n  <h3>10. Validity of this Privacy Policy</h3>\n  Unless otherwise specified in this privacy statement, the regulations of the de.NBI Privacy Policy (https://www.denbi.de/privacy-policy) apply.\n  We may update our Privacy Policy from time to time. Thus, we advise you to review this page periodically for any changes.\n  We will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately, after they are posted on this page.\n  If you have any questions or suggestions about our Privacy Policy, do not hesitate to contact us.\n</div>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {ConfigService} from '../config.service';\n\n@Component({\n  selector: 'app-result-page',\n  templateUrl: './result-page.component.html',\n  styleUrls: ['./result-page.component.css']\n})\nexport class ResultPageComponent implements OnInit {\n  dbId: string;\n  status = '';\n  ready = false;\n  resultUrl = 'https://tax2proteome.de/downloader/';\n\n  @ViewChild('bindingInput') bindingInput: ElementRef;\n\n  constructor(\n      private configService: ConfigService, ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  getDownloadLink() {\n    this.dbId = this.configService.resultLink;\n    return this.dbId;\n  }\n\n  setDownloadUrl(dbId){\n    this.resultUrl = 'https://tax2proteome.de/downloader/' + dbId;\n    this.getDownloadUrl();\n  }\n\n  getDownloadUrl(){\n    // console.log(this.result_url)\n    return this.resultUrl;\n  }\n\n  CheckProgress() {\n    this.dbId = this.bindingInput.nativeElement.value.trim();\n    this.configService.getProgress(this.dbId).catch((err) => console.log('error: ', err));\n    this.setDownloadUrl(this.dbId);\n    setTimeout(() =>\n        {\n          this.status = this.configService.status;\n          if (this.status.startsWith('status 01')){\n            this.ready = true;\n          }\n          return this.status;\n        },\n        1000);\n  }\n}\n","<h1>Check progress with your database ID:</h1>\n<div>\n    <div id=\"title-bar\">\n        <h2>\n            <span [innerHTML]=\"getDownloadLink()\"> </span>\n        </h2>\n    </div>\n    <div>\n        <label>\n            <textarea class=\"form\" placeholder=\"database ID\" #bindingInput> </textarea>\n        </label>\n    </div>\n    <div>\n        <button mat-raised-button class=\"button\" (click)=\"CheckProgress()\">Check status</button>\n        <p></p>\n        <h2>{{status}}</h2>\n    </div>\n    <p></p>\n    <div *ngIf=\"this.ready==true; then thenBlock else elseBlock\"></div>\n        <ng-template #thenBlock>\n            <a [href]=getDownloadUrl()> Download here </a>\n        </ng-template>\n        <ng-template #elseBlock>\n            <a></a>\n        </ng-template>\n</div>\n\n\n","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {UserInputService, TaxData} from '../user-input.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatSort} from '@angular/material/sort';\nimport {MatPaginator} from '@angular/material/paginator';\n\n@Component({\n  selector: 'app-tax-table',\n  templateUrl: './tax-table.component.html',\n  styleUrls: ['./tax-table.component.css']\n})\n\nexport class TaxTableComponent implements OnInit, AfterViewInit{\n  displayedColumns: string[] = ['taxid', 'name', 'rank'];\n  dataSource = new MatTableDataSource<TaxData>();\n  displayTaxTable = true;\n\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(\n      public UserInService: UserInputService,\n  ) {}\n\n  ngOnInit(): void {\n    this.refreshTable();\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.data = this.UserInService.shownTaxa;\n  }\n\n  refreshTable() {\n    this.UserInService.taxaEmitter.subscribe((data: TaxData[]) => {\n      this.dataSource.data = data;\n    });\n  }\n\n  deleteSelectedTaxIDs(){\n    this.UserInService.selectedTaxa = [];\n    this.UserInService.shownTaxa = [];\n    this.UserInService.rankedTaxa = [];\n    this.UserInService.sendTaxa();\n  }\n}\n","<div *ngIf=\"displayTaxTable\">\n    <table mat-table [dataSource]=\"dataSource\" *ngIf=\"dataSource\" matSort class=\"container_table mat-elevation-z8\">\n        <!-- TaxID Column -->\n        <ng-container matColumnDef=\"taxid\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Taxon ID </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.taxid}} </td>\n        </ng-container>\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n        <!-- Rank Column -->\n        <ng-container matColumnDef=\"rank\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"header\"> Rank </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.rank}} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <p></p>\n    <button mat-fab color=\"warn\" matTooltip=\"Delete all taxa\" aria-label=\"Delete taxa\"  (click)=\"deleteSelectedTaxIDs()\">\n        <mat-icon>delete</mat-icon>\n    </button>\n    <p></p>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-terms-of-service-page',\n  templateUrl: './terms-of-service-page.component.html',\n  styleUrls: ['./terms-of-service-page.component.css']\n})\nexport class TermsOfServicePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"legal-text\">\n  <h1>Tax2Proteome</h1>\n  <h2>Terms of Use</h2>\n  These Terms of Use regulate the use of the Tax2Proteome Service and Website hosted by the de.NBI Cloud and located at\n  https://www.tax2proteome.de, hereinafter referred to as the Service and Website.\n  The terms and conditions of use are binding for all users, regardless of the end devices from which access is made.\n  In case of contradictions, the relevant regulations regarding the information processing and communication\n  infrastructure of the individual de.NBI cloud locations remain unaffected and take primacy over the regulations here.\n  <h3>§ 1 User</h3>\n  A user is defined as any person who access the Tax2Proteome Website or uses the Tax2Proteome Service.\n  By visiting our Website and using our Service the user agrees to our Terms of Use (url) and Privacy Policy (url).\n  <h3>§ 2 Availability</h3>\n  The Tax2Proteome Service is provided within the limits of available personnel and financial resources.\n  There is no guarantee regarding the availability and accuracy of the Service or Website, in particular no service\n  level is agreed. Furthermore, there is no guarantee of the available network bandwidth to the Service or Website.\n  We expressly note, there is no backup of data uploaded by the user or processed by the Service.\n  Thus, server problems and crashes can lead to permanent data loss.\n  The user is responsible for keeping copies of his own data sets and downloading analysis results as soon as available.\n  In the following cases, the Service and Website might be restricted or even shut down:\n  to perform necessary updates/upgrades,\n  in order to maintain the secure operation of the de.NBI cloud in case of system overload,\n  if there is a well-founded suspicion of a violation of this usage regulation.\n  <h3>§ 3 Costs</h3>\n  The use of the Service and Website is free of charge and there are no user rankings.\n  <h3>§ 4 Access</h3>\n  To use the Service no authentication is necessary.\n  <h3>§ 5 Logging</h3>\n  The user agrees that the log and report data recorded in the context of visiting the Website and using the Service are\n  stored electronically for purposes of system administration, security and functionality. The service provider is authorized\n  to inspect these data in case of reasonable suspicion of malfunction or misuse in order to ensure the proper operation\n  of the system. It is not permitted to check the behavior or performance of persons. If there are actual indications that\n  a user is committing illegal actions, further use will be prevented. Further information on recorded and stored user\n  data can be found in our privacy policy.\n  <h3>§ 6 Obligations of users</h3>\n  Every user agrees to this Terms of Use when accessing and visiting the Service and Website. The user also agrees to following obligations:\n  <ul>\n    <li>The user has to use the Service exclusively for the scientific purposes.</li>\n    <li>It is expressly forbidden to spy on or attack foreign passwords, the system itself or the systems of included third-parties.</li>\n    <li>Any security gaps or information about apparently erroneously accessible data that become known to the user must\n      be reported to the service provider immediately.</li>\n  </ul>\n  If the user violates the above-mentioned obligations, authorisation to use the Service will be withdrawn and the access\n  will be blocked permanently.\n  <h3>§ 7 Acceptable Use Policy.</h3>\n  The following terms constitute our “Acceptable Use Policy”: You agree not to use the Website and Service to collect,\n  upload, transmit, display, or distribute any User Content (i) that violates any third-party right or any intellectual\n  property or proprietary right; (ii) that is unlawful, harassing, abusive, tortious, threatening, harmful, invasive of\n  another's privacy, vulgar, defamatory, false, intentionally misleading, trade libelous, pornographic, obscene, patently\n  offensive, promotes racism, bigotry, hatred, or physical harm of any kind against any group or individual; (iii) that\n  is harmful to minors in any way; or (iv) that is in violation of any law, regulation, or obligations or restrictions\n  imposed by any third party.\n  In addition, you agree not to: (i) upload, transmit, or distribute to or through the Website and Service any software\n  or code intended to damage or alter a computer system or data; (ii) send through the Website and Service unsolicited or\n  unauthorized advertising, promotional materials, junk mail, spam, chain letters, pyramid schemes,\n  or any other form of duplicative or unsolicited messages; (iii) use the Website and Service to harvest, collect,\n  gather or assemble information or data regarding other users without their consent; (iv) interfere with, disrupt,\n  or create an undue burden on servers or networks connected to the Site, or violate the regulations, policies or\n  procedures of such networks; (v) attempt to gain unauthorized access to the Website and Service, whether through\n  password mining or any other means; (vi) harass or interfere with any other user's use and enjoyment of the Website\n  and Service; or (vi) use software or automated agents or scripts to sign multiple times into the Website and Service,\n  or to generate automated analyses, requests, or queries to the Website and Service.\n  <h3>§ 8 Responsibility and Liability</h3>\n  The Website and the Service are provided on an \"as is\" and \"as available\" basis. Neither we nor any of our affiliates\n  make any representations or warranties, express or implied, as to the operation or accuracy, adequacy or completeness\n  of the content or results provided by the Website and the Service. To the fullest extent permitted by applicable law,\n  we and our affiliates disclaim all warranties, express or implied, including but not limited to\n  <ul>\n    <li>the availability of the Website and the Service or that the Website and the Service will be available without\n      interruption or error and defects will be corrected;</li>\n    <li>the accuracy, adequacy or completeness of the content and results of the Website and the Service</li>\n    <li>the suitability for a particular purpose of the applications available on this website;</li>\n    <li>the up-to-dateness of the applications offered or provided on the website;</li>\n    <li>the terms of use and privacy policies of our affiliates or included third-party systems.</li>\n  </ul>\n  You will rely solely on your own judgment when using the Website and the Service. In no event will we be liable to you\n  or any other person for any direct, indirect, incidental, consequential, punitive or special damages, including loss\n  of business or loss of profits, arising out of the use of or inability to use the Website or the Service, even if we\n  have been advised of the possibility of such damages, including, but not limited to, unauthorized access using your\n  user name and password or transmission of data or content.\n  The limitation of liability contained in these Terms of Use applies to the extent permitted by applicable law.\n  We make no representation that the services on this site are appropriate or available for use in other jurisdictions,\n  and access to the site from territories where its operation is illegal is prohibited. Those who choose to access this\n  Website from other locations do so at their own discretion and are solely responsible for compliance with their laws\n  and regulations. You acknowledge that you have all necessary licenses to use the internet and conduct online.\n  <h3>§ 9 Personal data</h3>\n  The user may not use any personal data such as first names, surnames, address information, telephone numbers and\n  e-mail addresses in any file uploaded to the Service or any parameter field.\n  The user is responsible for ensuring the confidentiality of data worthy of protection processed by the Website and\n  Service in accordance with the applicable data protection and patent guidelines and for complying with relevant civil\n  and criminal law provisions. For personal data, the data protection laws of the respective locations, the Federal\n  Republic of Germany and the EU Data Protection Basic Regulation must be observed.\n  <h3>§ 10 Licensing</h3>\n  When transmitting data of any kind to the Website and the Service, the user is responsible for compliance with any\n  licensing models of the submitted data; in addition, the user is fully responsible for the licensing costs that arise when using fee-based datasets.\n  <h3>§ 11 Third-Party Links</h3>\n  The Site may contain links to third-party websites and services. Such third-party links Links are not under the\n  control of us and we are not responsible for any third-party links Links.  We provide access to these third-party\n  links only as a convenience to you, and does not review, approve, monitor, endorse, warrant, or make any representations\n  with respect to third-party links.  You use all third-party links at your own risk, and should apply a suitable level\n  of caution and discretion in doing so. When you click on any of the third-party links, the applicable third party's\n  terms and policies apply, including the third party's privacy and data gathering practices.\n  <h3>§ 12 Reservation of right to change</h3>\n  The service provider reserves the right to adapt these Terms of Use at any time and without stating reasons.\n  Thus, we advise the user to review this page periodically for any changes. We will notify you of any changes by posting\n  the new Terms of Use on this page. These changes are effective immediately, after they are posted on this page.\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title-bar',\n  templateUrl: './title-bar.component.html',\n  styleUrls: ['./title-bar.component.css']\n})\nexport class TitleBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar>\n  <span>Tax2Proteome</span>\n</mat-toolbar>\n","import {EventEmitter, Injectable} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n// tax data objects, and other options, tax level order\n// ranked taxa to set, add taxa, send taxa emitter to table (in add_taxa and set_to_set)\n\nexport interface TaxData {\n  taxid: number;\n  name: string;\n  rank: string;\n}\n\nexport interface TaxIDData {\n  taxid: number;\n  name: string;\n  rank: string;\n  parentid: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserInputService {\n  myControl = new FormControl();\n  // selectedTaxa:TaxData[] = [{ taxid: 22, name: \"zwei\", rank: \"no rank\" }];\n  selectedTaxa: TaxData[] = [];\n  rankedTaxa: TaxIDData[] = [];\n  // if rank selected, taxa in table differ from selected taxa\n  shownTaxa: TaxData[] = [];\n  taxaEmitter = new EventEmitter<TaxData[]>();\n  selectedDatabase = 'Uniprot';\n  selectedRank = 'species';\n  selectedHeader = 'reduced headers';\n  selectedRedundant = 'non-redundant';\n  databases: string[] = ['Uniprot', 'NCBI-nr', 'Swissprot'];\n  ranks: string[] = ['species', 'genus', 'family', 'order', 'class', 'phylum', 'kingdom', `superkingdom`];\n  redundantOptions: string[] = ['non-redundant', 'redundant'];\n  headerOptions: string[] = ['reduced headers', 'full headers'];\n  order: string[] = ['no rank', 'forma', 'serotype',  'serogroup', 'biotype', 'strain', 'genotype', 'isolate', 'morph', 'pathogroup',\n    'clade', 'subvariety', 'forma specialis', 'varietas', 'subspecies', 'species', 'species subgroup', 'species group',\n    'series', 'subsection', 'section', 'subgenus', 'genus', 'subtribe', 'tribe', 'subfamily', 'family', 'superfamily',\n    'parvorder', 'infraorder', 'suborder', 'order', 'superorder', 'subcohort', 'cohort', 'infraclass', 'subclass',\n    'class', 'superclass', 'subphylum', 'phylum', 'superphylum', 'subkingdom', 'kingdom', 'superkingdom', 'root'];\n\n  getTaxa() {\n    return this.selectedTaxa;\n  }\n\n  deleteSelectedTaxIDs(){\n    this.selectedTaxa = [];\n    return this.selectedTaxa;\n  }\n\n  constructor() {\n  }\n\n  sendTaxa() {\n    this.taxaEmitter.emit(this.shownTaxa);\n  }\n\n  addTaxa(taxObject: TaxData): void {\n    // no duplicates\n    if (this.selectedTaxa.map(a => a.taxid).indexOf(taxObject.taxid) === -1)\n    {\n      this.selectedTaxa.push(taxObject);\n    }\n    this.myControl.setValue('');\n    this.shownTaxa = this.selectedTaxa;\n    this.sendTaxa();\n    }\n\n  set_to_set(): void {\n    const taxa = this.rankedTaxa;\n    this.rankedTaxa = [];\n    for (const taxon of taxa) {\n      // no duplicates\n      if (this.rankedTaxa.map(a => a.taxid).indexOf(taxon.taxid) === -1)\n      {\n        this.rankedTaxa.push(taxon);\n      }\n      this.myControl.setValue('');\n      this.shownTaxa = this.rankedTaxa;\n      this.sendTaxa();\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}