{"version":3,"sources":["ng://ng-remote-autocomplete/app/constants/autocomplete.constants.ts","ng://ng-remote-autocomplete/app/enums/search-state.type.ts","ng://ng-remote-autocomplete/app/directives/option-template.directive.ts","ng://ng-remote-autocomplete/app/services/autocomplete.service.ts","ng://ng-remote-autocomplete/app/services/item-list.service.ts","ng://ng-remote-autocomplete/app/components/autocomplete.component.ts","ng://ng-remote-autocomplete/app/directives/option-directive.ts","ng://ng-remote-autocomplete/app/enums/key-kode.ts","ng://ng-remote-autocomplete/app/services/scroll-service.ts","ng://ng-remote-autocomplete/app/directives/keyboard-navigation.directive.ts","ng://ng-remote-autocomplete/app/autocomplete.module.ts"],"names":["SEARCH_WRAPPER_CLASS","OPTION_CLASS","Untracked","Loading","Finished","OptionTemplateDirective","template","this","Directive","args","selector","TemplateRef","AutocompleteService","changedHighlightItemSubject","Subject","selectItemSubject","_isOpen","Object","defineProperty","prototype","value","Injectable","ItemListService","autocompleteService","_activeIndex","items","index","isOpen","length","restoreIntialActiveIndex","next","RemoteAutocompleteComponent","itemListService","stopEnterPropagationOnSelect","needToShowNotFoundText","needToShowSearchingText","type","EventEmitter","highlighted","selected","blur","focusEvent","searchStates","SearchStateType","searchState","OPTION_LIST_WRAPPER_CLASS","OPTION_VALUE_CLASS","OPTION_DESCRIPTION_CLASS","LOADING_CLASS","RESULTS_NOT_FOUND_CLASS","propagateChange","_","propagateTouched","ngOnInit","_this","validateService","disabled","getDefaultIfNullOrUndefined","minChars","maxChars","pause","notFoundText","searchingText","changedHighlightSubscription","subscribe","onActiveIndexChanged","selectSubscription","result","searchResult","emit","close","ngOnDestroy","unsubscribe","writeValue","undefined","searchValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","onType","originalSearchValue","validsearchTerm","resetSearchTimeout","onInputBlur","event","relatedTarget","classList","contains","onInputFocus","classes","inputClasses","join","focus","inputField","open","service","Error","isParameterizedSearch","searchParameters","activeIndex","highlightedItem","clearSearchTimeout","setSearchTimeout","typingTimeout","setTimeout","search","bind","clearTimeout","performSearch","first","results","getWithParams","get","defaultValue","Component","styles","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","Input","Output","ContentChild","read","ViewChild","OptionDirective","onMouseEnter","onMouseLeave","onClick","host","(mouseenter)","(mouseleave)","(click)","Backspace","Tab","Enter","Shift","Ctrl","Alt","PauseBreak","CapsLock","Escape","Space","PageUp","PageDown","End","Home","LeftArrow","UpArrow","RightArrow","DownArrow","Insert","Delete","Zero","ClosedParen","One","ExclamationMark","Two","AtSign","Three","PoundSign","Hash","Four","DollarSign","Five","PercentSign","Six","Caret","Hat","Seven","Ampersand","Eight","Star","Asterik","Nine","OpenParen","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","LeftWindowKey","RightWindowKey","SelectKey","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","Multiply","Add","Subtract","DecimalPoint","Divide","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NumLock","ScrollLock","SemiColon","Equals","Comma","Dash","Period","UnderScore","PlusSign","ForwardSlash","Tilde","GraveAccent","OpenBracket","ClosedBracket","Quote","ScrollService","element","handleKeyboarOptionNavigation","listElement","querySelector","scrollTo","activeElement","querySelectorAll","listTop","getBoundingClientRect","top","listBottom","clientHeight","elementTop","elementBottom","scrollIntoView","KeyboardNavigationDirective","stopEnterPropagation","scrollService","onKeydown","which","keyCode","KeyCode","handleDownKey","handleUpKey","handleEnter","preventDefault","stopPropagation","ElementRef","HostListener","RemoteAutocompleteModule","NgModule","imports","CommonModule","FormsModule","declarations","exports"],"mappings":"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","sourcesContent":["export const DEFAULT_ACTIVE_INDEX: number = -1;\r\nexport const DEFAULT_MIN_SEARCH_LENGTH: number = 1;\r\nexport const DEFAULT_MAX_CHARS: number = 2147483647;\r\nexport const DEFAULT_PAUSE: number = 100;\r\n\r\nexport const NOT_FOUND_TEXT: string = \"No results found\";\r\nexport const SEARCHING_TEXT: string = \"Searching...\";\r\n\r\nexport const SEARCH_WRAPPER_CLASS: string = \"autocomplete-search-wrapper\";\r\nexport const OPTION_VALUE_CLASS: string = \"autocomplete-option-value\";\r\nexport const OPTION_DESCRIPTION_CLASS: string = \"autocomplete-option-description\";\r\nexport const OPTION_CLASS: string = \"autocomplete-option\";\r\nexport const OPTION_LIST_WRAPPER_CLASS: string = \"option-list-wrapper\";\r\nexport const LOADING_CLASS: string = \"autocomplete-loading\";\r\nexport const RESULTS_NOT_FOUND_CLASS: string = \"autocomplete-not-found\";","export enum SearchStateType {\r\n    Untracked,\r\n    Loading,\r\n    Finished\r\n}","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[remote-autocomplete-option-tmpl]'\r\n})\r\nexport class OptionTemplateDirective {\r\n    constructor(public template: TemplateRef<any>) {\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs/Subject\";\r\n\r\n@Injectable()\r\nexport class AutocompleteService {\r\n    public changedHighlightItemSubject: Subject<number> = new Subject<number>();\r\n    public selectItemSubject: Subject<number> = new Subject<number>();\r\n\r\n    private _isOpen: boolean = false;\r\n\r\n    set isOpen(value: boolean) {\r\n        this._isOpen = value;\r\n    }\r\n\r\n    get isOpen(): boolean {\r\n        return this._isOpen;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\nimport { AutocompleteService } from \"./autocomplete.service\";\r\nimport { DEFAULT_ACTIVE_INDEX } from \"../constants/autocomplete.constants\";\r\nimport { AutocompleteItem } from \"../interfaces/autocomplete.item\";\r\n\r\n@Injectable()\r\nexport class ItemListService {\r\n    constructor(private autocompleteService: AutocompleteService) {\r\n    }\r\n\r\n    private _activeIndex: number = DEFAULT_ACTIVE_INDEX;\r\n\r\n    public items: AutocompleteItem[] = [];\r\n\r\n    set activeIndex(index: number) {\r\n        if (this.autocompleteService.isOpen) {\r\n            if (index >= this.items.length) {\r\n                this.restoreIntialActiveIndex();\r\n                return;\r\n            }\r\n\r\n\r\n            if (index < DEFAULT_ACTIVE_INDEX) {\r\n                this._activeIndex = this.items.length - 1;\r\n                this.autocompleteService.changedHighlightItemSubject.next(this._activeIndex);\r\n                return;\r\n            }\r\n\r\n            this._activeIndex = index;\r\n            this.autocompleteService.changedHighlightItemSubject.next(this._activeIndex);\r\n        }\r\n    }\r\n\r\n    get activeIndex(): number {\r\n        return this._activeIndex;\r\n    }\r\n\r\n    restoreIntialActiveIndex(): void {\r\n        this._activeIndex = DEFAULT_ACTIVE_INDEX;\r\n        this.autocompleteService.changedHighlightItemSubject.next(this._activeIndex);\r\n    }\r\n}","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ContentChild,\r\n    TemplateRef,\r\n    OnDestroy,\r\n    forwardRef,\r\n    ViewChild,\r\n    ElementRef\r\n} from \"@angular/core\";\r\n\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\nimport { Subscription } from 'rxjs/Rx';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { AutocompleteItem } from \"../interfaces/autocomplete.item\";\r\n\r\nimport {\r\n    DEFAULT_MAX_CHARS,\r\n    DEFAULT_MIN_SEARCH_LENGTH,\r\n    DEFAULT_PAUSE,\r\n    NOT_FOUND_TEXT,\r\n    SEARCHING_TEXT,\r\n    DEFAULT_ACTIVE_INDEX,\r\n    SEARCH_WRAPPER_CLASS,\r\n    OPTION_LIST_WRAPPER_CLASS,\r\n    OPTION_CLASS,\r\n    OPTION_VALUE_CLASS,\r\n    OPTION_DESCRIPTION_CLASS,\r\n    LOADING_CLASS,\r\n    RESULTS_NOT_FOUND_CLASS\r\n} from \"../constants/autocomplete.constants\";\r\n\r\nimport { SearchStateType } from \"../enums/search-state.type\";\r\nimport { OptionTemplateDirective } from \"../directives/option-template.directive\";\r\nimport { ItemListService } from \"../services/item-list.service\";\r\nimport { AutocompleteSourceService } from \"../interfaces/autocomplete-source.service\";\r\nimport { AutocompleteService } from \"../services/autocomplete.service\";\r\nimport { ParameterizedAutocompleteSourceService } from \"../interfaces/parameterized-autocomplete-sourse.servise\";\r\nimport { Autocomplete } from \"../interfaces/autocomplete\";\r\n\r\n@Component({\r\n    selector: 'remote-autocomplete',\r\n    template: `<div keyboard-navigation [stopEnterPropagation]=\"stopEnterPropagationOnSelect\" class=\"remote-autocomplete\">\r\n    <input [(ngModel)]=\"searchValue\"\r\n           [attr.id]=\"inputId\"\r\n           [attr.name]=\"inputName\"\r\n           [attr.class]=\"inputClass\"\r\n           [disabled]=\"disabled\"\r\n           [attr.placeholder]=\"placeholder\"\r\n           [attr.autocomplete]=\"autocompleteAttr\"\r\n           [attr.tabindex]=\"tabindex\"\r\n           maxlength=\"{{maxChars}}\"\r\n           (input)=\"onType()\"\r\n           (blur)=\"onInputBlur($event)\"\r\n           (focus)=\"onInputFocus($event)\"\r\n           #input />\r\n    <div *ngIf=\"searchState === searchStates.Loading && needToShowSearchingText || \r\n                searchState === searchStates.Finished && (searchResult?.length > 0 || needToShowNotFoundText)\" [class]=\"SEARCH_WRAPPER_CLASS\">\r\n        <div *ngIf=\"searchState === searchStates.Loading\">\r\n            <span [class]=\"LOADING_CLASS\">{{searchingText}}</span>\r\n        </div>\r\n\r\n        <div *ngIf=\"searchState === searchStates.Finished && searchResult.length === 0\">\r\n            <span [class]=\"RESULTS_NOT_FOUND_CLASS\">{{notFoundText}}</span>\r\n        </div>\r\n\r\n        <div *ngIf=\"searchState === searchStates.Finished && searchResult?.length > 0\" [class]=\"OPTION_LIST_WRAPPER_CLASS\">\r\n            <div *ngFor=\"let item of searchResult; index as i\"\r\n                 remote-autocomplete-option\r\n                 [itemIndex]=\"i\"\r\n                 [class]=\"OPTION_CLASS\"\r\n                 [ngClass]=\"{'autocomplete-option-active': i === itemListService.activeIndex}\"\r\n                 tabindex=\"-1\">\r\n                <ng-template #defaultOptionTemplate>\r\n                    <span [class]=\"OPTION_VALUE_CLASS\">{{item.value}}</span>\r\n                    <span *ngIf=\"item.description\" [class]=\"OPTION_DESCRIPTION_CLASS\">{{item.description}}</span>\r\n                </ng-template>\r\n\r\n                <ng-template [ngTemplateOutlet]=\"optionTemplate || defaultOptionTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item }\">\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`,\r\n    styles: [`.autocomplete-search-wrapper{border:1px solid #ccc;max-height:200px;overflow:auto;max-width:200px}.autocomplete-option-active{background-color:#d3d3d3}`],\r\n    providers: [\r\n        AutocompleteService,\r\n        ItemListService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => RemoteAutocompleteComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\n\r\nexport class RemoteAutocompleteComponent implements OnInit, OnDestroy, ControlValueAccessor, Autocomplete {\r\n    @Input('service') service: AutocompleteSourceService | ParameterizedAutocompleteSourceService;\r\n    @Input('minSearchLength') minChars: number;\r\n    @Input('maxChars') maxChars: number;\r\n    @Input('pause') pause: number;\r\n    @Input('inputId') inputId: string;\r\n    @Input('inputName') inputName: string;\r\n    @Input('inputClass') inputClasses: string[];\r\n    @Input('disabled') disabled: boolean;\r\n    @Input('notFoundText') notFoundText: string;\r\n    @Input('searchingText') searchingText: string;\r\n    @Input('placeholder') placeholder: string;\r\n    @Input('searchParameters') searchParameters: any;\r\n    @Input('autocompleteAttr') autocompleteAttr: string;\r\n    @Input('tabindex') tabindex: number;\r\n    @Input('stopEnterPropagationOnSelect') stopEnterPropagationOnSelect: boolean = false;\r\n\t@Input('needToShowNotFoundText') needToShowNotFoundText: boolean = true;\r\n\t@Input('needToShowSearchingText') needToShowSearchingText: boolean = true;\r\n\r\n    @Output('type') type: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output('highlighted') highlighted: EventEmitter<AutocompleteItem> = new EventEmitter<AutocompleteItem>();\r\n    @Output('selected') selected: EventEmitter<AutocompleteItem> = new EventEmitter<AutocompleteItem>();\r\n    @Output('blur') blur: EventEmitter<Event> = new EventEmitter<Event>();\r\n    @Output('focus') focusEvent: EventEmitter<Event> = new EventEmitter<Event>();\r\n\r\n    //custom template\r\n    @ContentChild(OptionTemplateDirective, { read: TemplateRef }) optionTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('input') inputField: ElementRef;\r\n\r\n    public searchStates = SearchStateType;\r\n    public searchState = SearchStateType.Untracked;\r\n    public searchValue: string;\r\n    public searchResult: AutocompleteItem[];\r\n    public SEARCH_WRAPPER_CLASS: string = SEARCH_WRAPPER_CLASS;\r\n    public OPTION_LIST_WRAPPER_CLASS: string = OPTION_LIST_WRAPPER_CLASS;\r\n    public OPTION_CLASS: string = OPTION_CLASS;\r\n    public OPTION_VALUE_CLASS: string = OPTION_VALUE_CLASS;\r\n    public OPTION_DESCRIPTION_CLASS: string = OPTION_DESCRIPTION_CLASS;\r\n    public LOADING_CLASS: string = LOADING_CLASS;\r\n    public RESULTS_NOT_FOUND_CLASS: string = RESULTS_NOT_FOUND_CLASS;\r\n\r\n    private typingTimeout: number;\r\n    private originalSearchValue: string;\r\n    private changedHighlightSubscription: Subscription;\r\n    private selectSubscription: Subscription;\r\n    private propagateChange = (_: any) => { };\r\n    private propagateTouched = (_: any) => { };\r\n\r\n    constructor(public itemListService: ItemListService,\r\n        public autocompleteService: AutocompleteService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateService();\r\n\r\n        this.disabled = this.getDefaultIfNullOrUndefined(this.disabled, false);\r\n        this.minChars = this.getDefaultIfNullOrUndefined(this.minChars, DEFAULT_MIN_SEARCH_LENGTH);\r\n        this.maxChars = this.maxChars || DEFAULT_MAX_CHARS;\r\n        this.pause = this.pause || DEFAULT_PAUSE;\r\n        this.notFoundText = this.notFoundText || NOT_FOUND_TEXT;\r\n        this.searchingText = this.searchingText || SEARCHING_TEXT;\r\n\r\n        this.changedHighlightSubscription = this.autocompleteService.changedHighlightItemSubject.subscribe((index: number) => {\r\n            this.onActiveIndexChanged(index);\r\n        });\r\n\r\n        this.selectSubscription = this.autocompleteService.selectItemSubject.subscribe((index: number) => {\r\n            const result = this.searchResult[index];\r\n            this.propagateChange(result.value);\r\n            this.selected.emit(result);\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.changedHighlightSubscription.unsubscribe();\r\n        this.selectSubscription.unsubscribe();\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        if (value !== undefined) {\r\n            this.searchValue = value;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.propagateTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    onType(): void {\r\n        this.propagateChange(this.searchValue);\r\n        this.originalSearchValue = this.searchValue;\r\n        this.type.emit();\r\n\r\n        if (this.validsearchTerm()) {\r\n            this.searchState = this.searchStates.Loading;\r\n        } else {\r\n            this.close();\r\n        }\r\n\r\n        this.resetSearchTimeout();\r\n    }\r\n\r\n    onInputBlur(event: FocusEvent) {\r\n        if (event.relatedTarget) {\r\n            let related = <HTMLElement>event.relatedTarget;\r\n            if (related.classList.contains(this.OPTION_CLASS)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.propagateTouched(this.searchValue);\r\n        this.close();\r\n        this.blur.emit(event);\r\n    }\r\n\r\n    onInputFocus(event: Event) {\r\n        this.focusEvent.emit(event);\r\n    }\r\n\r\n    get inputClass(): string {\r\n        let classes: string = '';\r\n\r\n        if (this.inputClasses) {\r\n            classes = this.inputClasses.join(' ');\r\n        }\r\n\r\n        return classes;\r\n    }\r\n\r\n    focus() {\r\n        (<HTMLInputElement>this.inputField.nativeElement).focus();\r\n    }\r\n\r\n    open() {\r\n        this.onType();\r\n    }\r\n\r\n    close() {\r\n        this.autocompleteService.isOpen = false;\r\n        this.searchState = this.searchStates.Untracked;\r\n    }\r\n\r\n    private validateService(): void {\r\n        if (!this.service) {\r\n            throw new Error(\"AutocompleteService must be implemented\");\r\n        }\r\n\r\n        if (this.isParameterizedSearch(this.service) && (this.searchParameters === undefined || this.searchParameters === null)) {\r\n            throw new Error(\"Please provide additionalSearchParams or just provide AutocompleteSourceService instaead of ParameterizedAutocompleteSourceService\");\r\n        }\r\n    }\r\n\r\n    private onActiveIndexChanged(activeIndex: number): void {\r\n        let highlightedItem: AutocompleteItem;\r\n\r\n        if (activeIndex === DEFAULT_ACTIVE_INDEX) {\r\n            highlightedItem = null;\r\n            this.searchValue = this.originalSearchValue;\r\n        } else {\r\n            highlightedItem = this.searchResult[activeIndex];\r\n            this.searchValue = highlightedItem.value;\r\n        }\r\n\r\n        this.propagateChange(this.searchValue);\r\n        this.highlighted.emit(highlightedItem);\r\n    }\r\n\r\n    private resetSearchTimeout() {\r\n        this.clearSearchTimeout();\r\n        this.setSearchTimeout();\r\n    }\r\n\r\n    private setSearchTimeout() {\r\n        this.typingTimeout = setTimeout(this.search.bind(this), this.pause);\r\n    }\r\n\r\n    private clearSearchTimeout() {\r\n        clearTimeout(this.typingTimeout);\r\n    }\r\n\r\n    private search() {\r\n        this.itemListService.restoreIntialActiveIndex();\r\n\r\n        if (this.validsearchTerm()) {\r\n            this.performSearch().first().subscribe(\r\n                (results: AutocompleteItem[]) => {\r\n                    if (this.searchState !== this.searchStates.Untracked) {\r\n                        this.autocompleteService.isOpen = results.length > 0;\r\n                        this.itemListService.items = results;\r\n                        this.searchResult = results;\r\n                        this.searchState = this.searchStates.Finished;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    private performSearch(): Observable<AutocompleteItem[]> {\r\n        if (this.isParameterizedSearch(this.service)) {\r\n            return (<ParameterizedAutocompleteSourceService>this.service).getWithParams(this.searchValue, this.searchParameters);\r\n        } else {\r\n            return (<AutocompleteSourceService>this.service).get(this.searchValue);\r\n        }\r\n    }\r\n\r\n    private validsearchTerm() {\r\n        return (this.searchValue || '').length >= this.minChars;\r\n    }\r\n\r\n    private isParameterizedSearch(service: AutocompleteSourceService | ParameterizedAutocompleteSourceService): service is ParameterizedAutocompleteSourceService {\r\n        return (<ParameterizedAutocompleteSourceService>service).getWithParams !== undefined;\r\n    }\r\n\r\n    private getDefaultIfNullOrUndefined<T>(value: T, defaultValue: T): T {\r\n        return value === undefined || value === null\r\n            ? defaultValue\r\n            : value;\r\n    }\r\n}","import {\r\n    Input,\r\n    Directive,\r\n    HostListener\r\n} from \"@angular/core\";\r\n\r\nimport { ItemListService } from \"../services/item-list.service\";\r\nimport { AutocompleteService } from \"../services/autocomplete.service\";\r\n\r\n@Directive({\r\n    selector: '[remote-autocomplete-option]',\r\n    host: {\r\n        '(mouseenter)': 'onMouseEnter($event)',\r\n        '(mouseleave)': 'onMouseLeave($event)',\r\n        '(click)': 'onClick($event)'\r\n    }\r\n})\r\nexport class OptionDirective {\r\n    @Input('itemIndex') index;\r\n\r\n    constructor(private autocompleteService: AutocompleteService,\r\n        private itemListService: ItemListService) {\r\n    }\r\n\r\n    onMouseEnter(event: MouseEvent) {\r\n        this.itemListService.activeIndex = this.index;\r\n    }\r\n\r\n    onMouseLeave(event: MouseEvent) {\r\n        this.itemListService.restoreIntialActiveIndex();\r\n    }\r\n\r\n    onClick(event: MouseEvent) {\r\n        this.autocompleteService.selectItemSubject.next(this.index);\r\n    }\r\n}","export enum KeyCode {\r\n    Backspace = 8,\r\n    Tab = 9,\r\n    Enter = 13,\r\n    Shift = 16,\r\n    Ctrl = 17,\r\n    Alt = 18,\r\n    PauseBreak = 19,\r\n    CapsLock = 20,\r\n    Escape = 27,\r\n    Space = 32,\r\n    PageUp = 33,\r\n    PageDown = 34,\r\n    End = 35,\r\n    Home = 36,\r\n    LeftArrow = 37,\r\n    UpArrow = 38,\r\n    RightArrow = 39,\r\n    DownArrow = 40,\r\n    Insert = 45,\r\n    Delete = 46,\r\n    Zero = 48,\r\n    ClosedParen = 48,\r\n    One = 49,\r\n    ExclamationMark = 49,\r\n    Two = 50,\r\n    AtSign = 50,\r\n    Three = 51,\r\n    PoundSign = 51,\r\n    Hash = 51,\r\n    Four = 52,\r\n    DollarSign = 52,\r\n    Five = 53,\r\n    PercentSign = 53,\r\n    Six = 54,\r\n    Caret = 54,\r\n    Hat = 54,\r\n    Seven = 55,\r\n    Ampersand = 55,\r\n    Eight = 56,\r\n    Star = 56,\r\n    Asterik = 56,\r\n    Nine = 57,\r\n    OpenParen = 57,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    LeftWindowKey = 91,\r\n    RightWindowKey = 92,\r\n    SelectKey = 93,\r\n    Numpad0 = 96,\r\n    Numpad1 = 97,\r\n    Numpad2 = 98,\r\n    Numpad3 = 99,\r\n    Numpad4 = 100,\r\n    Numpad5 = 101,\r\n    Numpad6 = 102,\r\n    Numpad7 = 103,\r\n    Numpad8 = 104,\r\n    Numpad9 = 105,\r\n    Multiply = 106,\r\n    Add = 107,\r\n    Subtract = 109,\r\n    DecimalPoint = 110,\r\n    Divide = 111,\r\n    F1 = 112,\r\n    F2 = 113,\r\n    F3 = 114,\r\n    F4 = 115,\r\n    F5 = 116,\r\n    F6 = 117,\r\n    F7 = 118,\r\n    F8 = 119,\r\n    F9 = 120,\r\n    F10 = 121,\r\n    F11 = 122,\r\n    F12 = 123,\r\n    NumLock = 144,\r\n    ScrollLock = 145,\r\n    SemiColon = 186,\r\n    Equals = 187,\r\n    Comma = 188,\r\n    Dash = 189,\r\n    Period = 190,\r\n    UnderScore = 189,\r\n    PlusSign = 187,\r\n    ForwardSlash = 191,\r\n    Tilde = 192,\r\n    GraveAccent = 192,\r\n    OpenBracket = 219,\r\n    ClosedBracket = 221,\r\n    Quote = 222,\r\n}","import { ElementRef } from \"@angular/core\";\r\nimport { SEARCH_WRAPPER_CLASS, OPTION_CLASS, DEFAULT_ACTIVE_INDEX } from \"../constants/autocomplete.constants\";\r\n\r\nexport class ScrollService {\r\n    constructor(private element: ElementRef) {\r\n    }\r\n\r\n    handleKeyboarOptionNavigation(activeIndex: number): void {\r\n        const autocompleteElement = <HTMLElement>this.element.nativeElement;\r\n        const listElement = autocompleteElement.querySelector(`.${SEARCH_WRAPPER_CLASS}`);\r\n\r\n        if (listElement) {\r\n            if (activeIndex === DEFAULT_ACTIVE_INDEX) {\r\n                listElement.scrollTo(0, 0);\r\n                return;\r\n            }\r\n\r\n            const optionElements = listElement.querySelectorAll(`.${OPTION_CLASS}`);\r\n            const activeElement = optionElements[activeIndex];\r\n\r\n            const listTop = listElement.getBoundingClientRect().top;\r\n            const listBottom = listTop + listElement.clientHeight;\r\n\r\n            const elementTop = activeElement.getBoundingClientRect().top;\r\n            const elementBottom = elementTop + activeElement.clientHeight;\r\n\r\n            if (listTop > elementTop) {\r\n                activeElement.scrollIntoView(true);\r\n            }\r\n\r\n            if (listBottom < elementBottom) {\r\n                activeElement.scrollIntoView(false);\r\n            }\r\n        }\r\n    }\r\n}","import {\r\n    Directive,\r\n    HostListener,\r\n    ElementRef,\r\n    Input\r\n} from \"@angular/core\";\r\n\r\nimport { KeyCode } from \"../enums/key-kode\";\r\nimport { ItemListService } from \"../services/item-list.service\";\r\nimport { AutocompleteService } from \"../services/autocomplete.service\";\r\nimport { ScrollService } from \"../services/scroll-service\";\r\n\r\n@Directive({\r\n    selector: '[keyboard-navigation]'\r\n})\r\nexport class KeyboardNavigationDirective {\r\n    private readonly scrollService: ScrollService;\r\n\r\n    @Input() stopEnterPropagation: boolean = false;\r\n\r\n    constructor(private autocompleteService: AutocompleteService,\r\n        private itemListService: ItemListService,\r\n        private element: ElementRef) {\r\n        this.scrollService = new ScrollService(element);\r\n    }\r\n\r\n    @HostListener('keydown', ['$event']) onKeydown(event: KeyboardEvent) {\r\n        let key = event.which || event.keyCode;\r\n\r\n        switch (key) {\r\n            case KeyCode.DownArrow:\r\n                this.handleDownKey(event);\r\n                break;\r\n            case KeyCode.UpArrow:\r\n                this.handleUpKey(event);\r\n                break;\r\n            case KeyCode.Enter:\r\n                this.handleEnter(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private handleDownKey(event: KeyboardEvent) {\r\n        this.itemListService.activeIndex++;\r\n        this.scrollService.handleKeyboarOptionNavigation(this.itemListService.activeIndex);\r\n    }\r\n\r\n    private handleUpKey(event: KeyboardEvent) {\r\n        this.itemListService.activeIndex--;\r\n        this.scrollService.handleKeyboarOptionNavigation(this.itemListService.activeIndex);\r\n    }\r\n\r\n    private handleEnter(event: KeyboardEvent) {\r\n        if (this.itemListService.activeIndex >= 0) {\r\n            this.autocompleteService.selectItemSubject.next(this.itemListService.activeIndex);\r\n            event.preventDefault();\r\n\r\n            if (this.stopEnterPropagation) {\r\n                event.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { RemoteAutocompleteComponent } from \"./components/autocomplete.component\";\r\nimport { OptionTemplateDirective } from \"./directives/option-template.directive\";\r\nimport { OptionDirective } from \"./directives/option-directive\";\r\nimport { ItemListService } from \"./services/item-list.service\";\r\nimport { KeyboardNavigationDirective } from \"./directives/keyboard-navigation.directive\";\r\nimport { AutocompleteService } from \"./services/autocomplete.service\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [\r\n        RemoteAutocompleteComponent,\r\n        OptionTemplateDirective,\r\n        OptionDirective,\r\n        KeyboardNavigationDirective\r\n    ],\r\n    exports: [\r\n        RemoteAutocompleteComponent,\r\n        OptionTemplateDirective\r\n    ],\r\n})\r\nexport class RemoteAutocompleteModule {\r\n}"]}