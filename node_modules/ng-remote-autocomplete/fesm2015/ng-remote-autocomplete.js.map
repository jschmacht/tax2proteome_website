{"version":3,"file":"ng-remote-autocomplete.js.map","sources":["ng://ng-remote-autocomplete/app/constants/autocomplete.constants.ts","ng://ng-remote-autocomplete/app/enums/search-state.type.ts","ng://ng-remote-autocomplete/app/directives/option-template.directive.ts","ng://ng-remote-autocomplete/app/services/autocomplete.service.ts","ng://ng-remote-autocomplete/app/services/item-list.service.ts","ng://ng-remote-autocomplete/app/components/autocomplete.component.ts","ng://ng-remote-autocomplete/app/directives/option-directive.ts","ng://ng-remote-autocomplete/app/enums/key-kode.ts","ng://ng-remote-autocomplete/app/services/scroll-service.ts","ng://ng-remote-autocomplete/app/directives/keyboard-navigation.directive.ts","ng://ng-remote-autocomplete/app/autocomplete.module.ts"],"sourcesContent":["export const DEFAULT_ACTIVE_INDEX: number = -1;\r\nexport const DEFAULT_MIN_SEARCH_LENGTH: number = 1;\r\nexport const DEFAULT_MAX_CHARS: number = 2147483647;\r\nexport const DEFAULT_PAUSE: number = 100;\r\n\r\nexport const NOT_FOUND_TEXT: string = \"No results found\";\r\nexport const SEARCHING_TEXT: string = \"Searching...\";\r\n\r\nexport const SEARCH_WRAPPER_CLASS: string = \"autocomplete-search-wrapper\";\r\nexport const OPTION_VALUE_CLASS: string = \"autocomplete-option-value\";\r\nexport const OPTION_DESCRIPTION_CLASS: string = \"autocomplete-option-description\";\r\nexport const OPTION_CLASS: string = \"autocomplete-option\";\r\nexport const OPTION_LIST_WRAPPER_CLASS: string = \"option-list-wrapper\";\r\nexport const LOADING_CLASS: string = \"autocomplete-loading\";\r\nexport const RESULTS_NOT_FOUND_CLASS: string = \"autocomplete-not-found\";","export enum SearchStateType {\r\n    Untracked,\r\n    Loading,\r\n    Finished\r\n}","import { Directive, TemplateRef } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[remote-autocomplete-option-tmpl]'\r\n})\r\nexport class OptionTemplateDirective {\r\n    constructor(public template: TemplateRef<any>) {\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs/Subject\";\r\n\r\n@Injectable()\r\nexport class AutocompleteService {\r\n    public changedHighlightItemSubject: Subject<number> = new Subject<number>();\r\n    public selectItemSubject: Subject<number> = new Subject<number>();\r\n\r\n    private _isOpen: boolean = false;\r\n\r\n    set isOpen(value: boolean) {\r\n        this._isOpen = value;\r\n    }\r\n\r\n    get isOpen(): boolean {\r\n        return this._isOpen;\r\n    }\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\nimport { AutocompleteService } from \"./autocomplete.service\";\r\nimport { DEFAULT_ACTIVE_INDEX } from \"../constants/autocomplete.constants\";\r\nimport { AutocompleteItem } from \"../interfaces/autocomplete.item\";\r\n\r\n@Injectable()\r\nexport class ItemListService {\r\n    constructor(private autocompleteService: AutocompleteService) {\r\n    }\r\n\r\n    private _activeIndex: number = DEFAULT_ACTIVE_INDEX;\r\n\r\n    public items: AutocompleteItem[] = [];\r\n\r\n    set activeIndex(index: number) {\r\n        if (this.autocompleteService.isOpen) {\r\n            if (index >= this.items.length) {\r\n                this.restoreIntialActiveIndex();\r\n                return;\r\n            }\r\n\r\n\r\n            if (index < DEFAULT_ACTIVE_INDEX) {\r\n                this._activeIndex = this.items.length - 1;\r\n                this.autocompleteService.changedHighlightItemSubject.next(this._activeIndex);\r\n                return;\r\n            }\r\n\r\n            this._activeIndex = index;\r\n            this.autocompleteService.changedHighlightItemSubject.next(this._activeIndex);\r\n        }\r\n    }\r\n\r\n    get activeIndex(): number {\r\n        return this._activeIndex;\r\n    }\r\n\r\n    restoreIntialActiveIndex(): void {\r\n        this._activeIndex = DEFAULT_ACTIVE_INDEX;\r\n        this.autocompleteService.changedHighlightItemSubject.next(this._activeIndex);\r\n    }\r\n}","import {\r\n    Component,\r\n    OnInit,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ContentChild,\r\n    TemplateRef,\r\n    OnDestroy,\r\n    forwardRef,\r\n    ViewChild,\r\n    ElementRef\r\n} from \"@angular/core\";\r\n\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\r\n\r\nimport { Subscription } from 'rxjs/Rx';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\nimport { AutocompleteItem } from \"../interfaces/autocomplete.item\";\r\n\r\nimport {\r\n    DEFAULT_MAX_CHARS,\r\n    DEFAULT_MIN_SEARCH_LENGTH,\r\n    DEFAULT_PAUSE,\r\n    NOT_FOUND_TEXT,\r\n    SEARCHING_TEXT,\r\n    DEFAULT_ACTIVE_INDEX,\r\n    SEARCH_WRAPPER_CLASS,\r\n    OPTION_LIST_WRAPPER_CLASS,\r\n    OPTION_CLASS,\r\n    OPTION_VALUE_CLASS,\r\n    OPTION_DESCRIPTION_CLASS,\r\n    LOADING_CLASS,\r\n    RESULTS_NOT_FOUND_CLASS\r\n} from \"../constants/autocomplete.constants\";\r\n\r\nimport { SearchStateType } from \"../enums/search-state.type\";\r\nimport { OptionTemplateDirective } from \"../directives/option-template.directive\";\r\nimport { ItemListService } from \"../services/item-list.service\";\r\nimport { AutocompleteSourceService } from \"../interfaces/autocomplete-source.service\";\r\nimport { AutocompleteService } from \"../services/autocomplete.service\";\r\nimport { ParameterizedAutocompleteSourceService } from \"../interfaces/parameterized-autocomplete-sourse.servise\";\r\nimport { Autocomplete } from \"../interfaces/autocomplete\";\r\n\r\n@Component({\r\n    selector: 'remote-autocomplete',\r\n    template: `<div keyboard-navigation [stopEnterPropagation]=\"stopEnterPropagationOnSelect\" class=\"remote-autocomplete\">\r\n    <input [(ngModel)]=\"searchValue\"\r\n           [attr.id]=\"inputId\"\r\n           [attr.name]=\"inputName\"\r\n           [attr.class]=\"inputClass\"\r\n           [disabled]=\"disabled\"\r\n           [attr.placeholder]=\"placeholder\"\r\n           [attr.autocomplete]=\"autocompleteAttr\"\r\n           [attr.tabindex]=\"tabindex\"\r\n           maxlength=\"{{maxChars}}\"\r\n           (input)=\"onType()\"\r\n           (blur)=\"onInputBlur($event)\"\r\n           (focus)=\"onInputFocus($event)\"\r\n           #input />\r\n    <div *ngIf=\"searchState === searchStates.Loading && needToShowSearchingText || \r\n                searchState === searchStates.Finished && (searchResult?.length > 0 || needToShowNotFoundText)\" [class]=\"SEARCH_WRAPPER_CLASS\">\r\n        <div *ngIf=\"searchState === searchStates.Loading\">\r\n            <span [class]=\"LOADING_CLASS\">{{searchingText}}</span>\r\n        </div>\r\n\r\n        <div *ngIf=\"searchState === searchStates.Finished && searchResult.length === 0\">\r\n            <span [class]=\"RESULTS_NOT_FOUND_CLASS\">{{notFoundText}}</span>\r\n        </div>\r\n\r\n        <div *ngIf=\"searchState === searchStates.Finished && searchResult?.length > 0\" [class]=\"OPTION_LIST_WRAPPER_CLASS\">\r\n            <div *ngFor=\"let item of searchResult; index as i\"\r\n                 remote-autocomplete-option\r\n                 [itemIndex]=\"i\"\r\n                 [class]=\"OPTION_CLASS\"\r\n                 [ngClass]=\"{'autocomplete-option-active': i === itemListService.activeIndex}\"\r\n                 tabindex=\"-1\">\r\n                <ng-template #defaultOptionTemplate>\r\n                    <span [class]=\"OPTION_VALUE_CLASS\">{{item.value}}</span>\r\n                    <span *ngIf=\"item.description\" [class]=\"OPTION_DESCRIPTION_CLASS\">{{item.description}}</span>\r\n                </ng-template>\r\n\r\n                <ng-template [ngTemplateOutlet]=\"optionTemplate || defaultOptionTemplate\" [ngTemplateOutletContext]=\"{ $implicit: item }\">\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>`,\r\n    styles: [`.autocomplete-search-wrapper{border:1px solid #ccc;max-height:200px;overflow:auto;max-width:200px}.autocomplete-option-active{background-color:#d3d3d3}`],\r\n    providers: [\r\n        AutocompleteService,\r\n        ItemListService,\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => RemoteAutocompleteComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\n\r\nexport class RemoteAutocompleteComponent implements OnInit, OnDestroy, ControlValueAccessor, Autocomplete {\r\n    @Input('service') service: AutocompleteSourceService | ParameterizedAutocompleteSourceService;\r\n    @Input('minSearchLength') minChars: number;\r\n    @Input('maxChars') maxChars: number;\r\n    @Input('pause') pause: number;\r\n    @Input('inputId') inputId: string;\r\n    @Input('inputName') inputName: string;\r\n    @Input('inputClass') inputClasses: string[];\r\n    @Input('disabled') disabled: boolean;\r\n    @Input('notFoundText') notFoundText: string;\r\n    @Input('searchingText') searchingText: string;\r\n    @Input('placeholder') placeholder: string;\r\n    @Input('searchParameters') searchParameters: any;\r\n    @Input('autocompleteAttr') autocompleteAttr: string;\r\n    @Input('tabindex') tabindex: number;\r\n    @Input('stopEnterPropagationOnSelect') stopEnterPropagationOnSelect: boolean = false;\r\n\t@Input('needToShowNotFoundText') needToShowNotFoundText: boolean = true;\r\n\t@Input('needToShowSearchingText') needToShowSearchingText: boolean = true;\r\n\r\n    @Output('type') type: EventEmitter<void> = new EventEmitter<void>();\r\n    @Output('highlighted') highlighted: EventEmitter<AutocompleteItem> = new EventEmitter<AutocompleteItem>();\r\n    @Output('selected') selected: EventEmitter<AutocompleteItem> = new EventEmitter<AutocompleteItem>();\r\n    @Output('blur') blur: EventEmitter<Event> = new EventEmitter<Event>();\r\n    @Output('focus') focusEvent: EventEmitter<Event> = new EventEmitter<Event>();\r\n\r\n    //custom template\r\n    @ContentChild(OptionTemplateDirective, { read: TemplateRef }) optionTemplate: TemplateRef<any>;\r\n\r\n    @ViewChild('input') inputField: ElementRef;\r\n\r\n    public searchStates = SearchStateType;\r\n    public searchState = SearchStateType.Untracked;\r\n    public searchValue: string;\r\n    public searchResult: AutocompleteItem[];\r\n    public SEARCH_WRAPPER_CLASS: string = SEARCH_WRAPPER_CLASS;\r\n    public OPTION_LIST_WRAPPER_CLASS: string = OPTION_LIST_WRAPPER_CLASS;\r\n    public OPTION_CLASS: string = OPTION_CLASS;\r\n    public OPTION_VALUE_CLASS: string = OPTION_VALUE_CLASS;\r\n    public OPTION_DESCRIPTION_CLASS: string = OPTION_DESCRIPTION_CLASS;\r\n    public LOADING_CLASS: string = LOADING_CLASS;\r\n    public RESULTS_NOT_FOUND_CLASS: string = RESULTS_NOT_FOUND_CLASS;\r\n\r\n    private typingTimeout: number;\r\n    private originalSearchValue: string;\r\n    private changedHighlightSubscription: Subscription;\r\n    private selectSubscription: Subscription;\r\n    private propagateChange = (_: any) => { };\r\n    private propagateTouched = (_: any) => { };\r\n\r\n    constructor(public itemListService: ItemListService,\r\n        public autocompleteService: AutocompleteService) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.validateService();\r\n\r\n        this.disabled = this.getDefaultIfNullOrUndefined(this.disabled, false);\r\n        this.minChars = this.getDefaultIfNullOrUndefined(this.minChars, DEFAULT_MIN_SEARCH_LENGTH);\r\n        this.maxChars = this.maxChars || DEFAULT_MAX_CHARS;\r\n        this.pause = this.pause || DEFAULT_PAUSE;\r\n        this.notFoundText = this.notFoundText || NOT_FOUND_TEXT;\r\n        this.searchingText = this.searchingText || SEARCHING_TEXT;\r\n\r\n        this.changedHighlightSubscription = this.autocompleteService.changedHighlightItemSubject.subscribe((index: number) => {\r\n            this.onActiveIndexChanged(index);\r\n        });\r\n\r\n        this.selectSubscription = this.autocompleteService.selectItemSubject.subscribe((index: number) => {\r\n            const result = this.searchResult[index];\r\n            this.propagateChange(result.value);\r\n            this.selected.emit(result);\r\n            this.close();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.changedHighlightSubscription.unsubscribe();\r\n        this.selectSubscription.unsubscribe();\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        if (value !== undefined) {\r\n            this.searchValue = value;\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: any) {\r\n        this.propagateChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: any) {\r\n        this.propagateTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    onType(): void {\r\n        this.propagateChange(this.searchValue);\r\n        this.originalSearchValue = this.searchValue;\r\n        this.type.emit();\r\n\r\n        if (this.validsearchTerm()) {\r\n            this.searchState = this.searchStates.Loading;\r\n        } else {\r\n            this.close();\r\n        }\r\n\r\n        this.resetSearchTimeout();\r\n    }\r\n\r\n    onInputBlur(event: FocusEvent) {\r\n        if (event.relatedTarget) {\r\n            let related = <HTMLElement>event.relatedTarget;\r\n            if (related.classList.contains(this.OPTION_CLASS)) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.propagateTouched(this.searchValue);\r\n        this.close();\r\n        this.blur.emit(event);\r\n    }\r\n\r\n    onInputFocus(event: Event) {\r\n        this.focusEvent.emit(event);\r\n    }\r\n\r\n    get inputClass(): string {\r\n        let classes: string = '';\r\n\r\n        if (this.inputClasses) {\r\n            classes = this.inputClasses.join(' ');\r\n        }\r\n\r\n        return classes;\r\n    }\r\n\r\n    focus() {\r\n        (<HTMLInputElement>this.inputField.nativeElement).focus();\r\n    }\r\n\r\n    open() {\r\n        this.onType();\r\n    }\r\n\r\n    close() {\r\n        this.autocompleteService.isOpen = false;\r\n        this.searchState = this.searchStates.Untracked;\r\n    }\r\n\r\n    private validateService(): void {\r\n        if (!this.service) {\r\n            throw new Error(\"AutocompleteService must be implemented\");\r\n        }\r\n\r\n        if (this.isParameterizedSearch(this.service) && (this.searchParameters === undefined || this.searchParameters === null)) {\r\n            throw new Error(\"Please provide additionalSearchParams or just provide AutocompleteSourceService instaead of ParameterizedAutocompleteSourceService\");\r\n        }\r\n    }\r\n\r\n    private onActiveIndexChanged(activeIndex: number): void {\r\n        let highlightedItem: AutocompleteItem;\r\n\r\n        if (activeIndex === DEFAULT_ACTIVE_INDEX) {\r\n            highlightedItem = null;\r\n            this.searchValue = this.originalSearchValue;\r\n        } else {\r\n            highlightedItem = this.searchResult[activeIndex];\r\n            this.searchValue = highlightedItem.value;\r\n        }\r\n\r\n        this.propagateChange(this.searchValue);\r\n        this.highlighted.emit(highlightedItem);\r\n    }\r\n\r\n    private resetSearchTimeout() {\r\n        this.clearSearchTimeout();\r\n        this.setSearchTimeout();\r\n    }\r\n\r\n    private setSearchTimeout() {\r\n        this.typingTimeout = setTimeout(this.search.bind(this), this.pause);\r\n    }\r\n\r\n    private clearSearchTimeout() {\r\n        clearTimeout(this.typingTimeout);\r\n    }\r\n\r\n    private search() {\r\n        this.itemListService.restoreIntialActiveIndex();\r\n\r\n        if (this.validsearchTerm()) {\r\n            this.performSearch().first().subscribe(\r\n                (results: AutocompleteItem[]) => {\r\n                    if (this.searchState !== this.searchStates.Untracked) {\r\n                        this.autocompleteService.isOpen = results.length > 0;\r\n                        this.itemListService.items = results;\r\n                        this.searchResult = results;\r\n                        this.searchState = this.searchStates.Finished;\r\n                    }\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    private performSearch(): Observable<AutocompleteItem[]> {\r\n        if (this.isParameterizedSearch(this.service)) {\r\n            return (<ParameterizedAutocompleteSourceService>this.service).getWithParams(this.searchValue, this.searchParameters);\r\n        } else {\r\n            return (<AutocompleteSourceService>this.service).get(this.searchValue);\r\n        }\r\n    }\r\n\r\n    private validsearchTerm() {\r\n        return (this.searchValue || '').length >= this.minChars;\r\n    }\r\n\r\n    private isParameterizedSearch(service: AutocompleteSourceService | ParameterizedAutocompleteSourceService): service is ParameterizedAutocompleteSourceService {\r\n        return (<ParameterizedAutocompleteSourceService>service).getWithParams !== undefined;\r\n    }\r\n\r\n    private getDefaultIfNullOrUndefined<T>(value: T, defaultValue: T): T {\r\n        return value === undefined || value === null\r\n            ? defaultValue\r\n            : value;\r\n    }\r\n}","import {\r\n    Input,\r\n    Directive,\r\n    HostListener\r\n} from \"@angular/core\";\r\n\r\nimport { ItemListService } from \"../services/item-list.service\";\r\nimport { AutocompleteService } from \"../services/autocomplete.service\";\r\n\r\n@Directive({\r\n    selector: '[remote-autocomplete-option]',\r\n    host: {\r\n        '(mouseenter)': 'onMouseEnter($event)',\r\n        '(mouseleave)': 'onMouseLeave($event)',\r\n        '(click)': 'onClick($event)'\r\n    }\r\n})\r\nexport class OptionDirective {\r\n    @Input('itemIndex') index;\r\n\r\n    constructor(private autocompleteService: AutocompleteService,\r\n        private itemListService: ItemListService) {\r\n    }\r\n\r\n    onMouseEnter(event: MouseEvent) {\r\n        this.itemListService.activeIndex = this.index;\r\n    }\r\n\r\n    onMouseLeave(event: MouseEvent) {\r\n        this.itemListService.restoreIntialActiveIndex();\r\n    }\r\n\r\n    onClick(event: MouseEvent) {\r\n        this.autocompleteService.selectItemSubject.next(this.index);\r\n    }\r\n}","export enum KeyCode {\r\n    Backspace = 8,\r\n    Tab = 9,\r\n    Enter = 13,\r\n    Shift = 16,\r\n    Ctrl = 17,\r\n    Alt = 18,\r\n    PauseBreak = 19,\r\n    CapsLock = 20,\r\n    Escape = 27,\r\n    Space = 32,\r\n    PageUp = 33,\r\n    PageDown = 34,\r\n    End = 35,\r\n    Home = 36,\r\n    LeftArrow = 37,\r\n    UpArrow = 38,\r\n    RightArrow = 39,\r\n    DownArrow = 40,\r\n    Insert = 45,\r\n    Delete = 46,\r\n    Zero = 48,\r\n    ClosedParen = 48,\r\n    One = 49,\r\n    ExclamationMark = 49,\r\n    Two = 50,\r\n    AtSign = 50,\r\n    Three = 51,\r\n    PoundSign = 51,\r\n    Hash = 51,\r\n    Four = 52,\r\n    DollarSign = 52,\r\n    Five = 53,\r\n    PercentSign = 53,\r\n    Six = 54,\r\n    Caret = 54,\r\n    Hat = 54,\r\n    Seven = 55,\r\n    Ampersand = 55,\r\n    Eight = 56,\r\n    Star = 56,\r\n    Asterik = 56,\r\n    Nine = 57,\r\n    OpenParen = 57,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    LeftWindowKey = 91,\r\n    RightWindowKey = 92,\r\n    SelectKey = 93,\r\n    Numpad0 = 96,\r\n    Numpad1 = 97,\r\n    Numpad2 = 98,\r\n    Numpad3 = 99,\r\n    Numpad4 = 100,\r\n    Numpad5 = 101,\r\n    Numpad6 = 102,\r\n    Numpad7 = 103,\r\n    Numpad8 = 104,\r\n    Numpad9 = 105,\r\n    Multiply = 106,\r\n    Add = 107,\r\n    Subtract = 109,\r\n    DecimalPoint = 110,\r\n    Divide = 111,\r\n    F1 = 112,\r\n    F2 = 113,\r\n    F3 = 114,\r\n    F4 = 115,\r\n    F5 = 116,\r\n    F6 = 117,\r\n    F7 = 118,\r\n    F8 = 119,\r\n    F9 = 120,\r\n    F10 = 121,\r\n    F11 = 122,\r\n    F12 = 123,\r\n    NumLock = 144,\r\n    ScrollLock = 145,\r\n    SemiColon = 186,\r\n    Equals = 187,\r\n    Comma = 188,\r\n    Dash = 189,\r\n    Period = 190,\r\n    UnderScore = 189,\r\n    PlusSign = 187,\r\n    ForwardSlash = 191,\r\n    Tilde = 192,\r\n    GraveAccent = 192,\r\n    OpenBracket = 219,\r\n    ClosedBracket = 221,\r\n    Quote = 222,\r\n}","import { ElementRef } from \"@angular/core\";\r\nimport { SEARCH_WRAPPER_CLASS, OPTION_CLASS, DEFAULT_ACTIVE_INDEX } from \"../constants/autocomplete.constants\";\r\n\r\nexport class ScrollService {\r\n    constructor(private element: ElementRef) {\r\n    }\r\n\r\n    handleKeyboarOptionNavigation(activeIndex: number): void {\r\n        const autocompleteElement = <HTMLElement>this.element.nativeElement;\r\n        const listElement = autocompleteElement.querySelector(`.${SEARCH_WRAPPER_CLASS}`);\r\n\r\n        if (listElement) {\r\n            if (activeIndex === DEFAULT_ACTIVE_INDEX) {\r\n                listElement.scrollTo(0, 0);\r\n                return;\r\n            }\r\n\r\n            const optionElements = listElement.querySelectorAll(`.${OPTION_CLASS}`);\r\n            const activeElement = optionElements[activeIndex];\r\n\r\n            const listTop = listElement.getBoundingClientRect().top;\r\n            const listBottom = listTop + listElement.clientHeight;\r\n\r\n            const elementTop = activeElement.getBoundingClientRect().top;\r\n            const elementBottom = elementTop + activeElement.clientHeight;\r\n\r\n            if (listTop > elementTop) {\r\n                activeElement.scrollIntoView(true);\r\n            }\r\n\r\n            if (listBottom < elementBottom) {\r\n                activeElement.scrollIntoView(false);\r\n            }\r\n        }\r\n    }\r\n}","import {\r\n    Directive,\r\n    HostListener,\r\n    ElementRef,\r\n    Input\r\n} from \"@angular/core\";\r\n\r\nimport { KeyCode } from \"../enums/key-kode\";\r\nimport { ItemListService } from \"../services/item-list.service\";\r\nimport { AutocompleteService } from \"../services/autocomplete.service\";\r\nimport { ScrollService } from \"../services/scroll-service\";\r\n\r\n@Directive({\r\n    selector: '[keyboard-navigation]'\r\n})\r\nexport class KeyboardNavigationDirective {\r\n    private readonly scrollService: ScrollService;\r\n\r\n    @Input() stopEnterPropagation: boolean = false;\r\n\r\n    constructor(private autocompleteService: AutocompleteService,\r\n        private itemListService: ItemListService,\r\n        private element: ElementRef) {\r\n        this.scrollService = new ScrollService(element);\r\n    }\r\n\r\n    @HostListener('keydown', ['$event']) onKeydown(event: KeyboardEvent) {\r\n        let key = event.which || event.keyCode;\r\n\r\n        switch (key) {\r\n            case KeyCode.DownArrow:\r\n                this.handleDownKey(event);\r\n                break;\r\n            case KeyCode.UpArrow:\r\n                this.handleUpKey(event);\r\n                break;\r\n            case KeyCode.Enter:\r\n                this.handleEnter(event);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private handleDownKey(event: KeyboardEvent) {\r\n        this.itemListService.activeIndex++;\r\n        this.scrollService.handleKeyboarOptionNavigation(this.itemListService.activeIndex);\r\n    }\r\n\r\n    private handleUpKey(event: KeyboardEvent) {\r\n        this.itemListService.activeIndex--;\r\n        this.scrollService.handleKeyboarOptionNavigation(this.itemListService.activeIndex);\r\n    }\r\n\r\n    private handleEnter(event: KeyboardEvent) {\r\n        if (this.itemListService.activeIndex >= 0) {\r\n            this.autocompleteService.selectItemSubject.next(this.itemListService.activeIndex);\r\n            event.preventDefault();\r\n\r\n            if (this.stopEnterPropagation) {\r\n                event.stopPropagation();\r\n            }\r\n        }\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { RemoteAutocompleteComponent } from \"./components/autocomplete.component\";\r\nimport { OptionTemplateDirective } from \"./directives/option-template.directive\";\r\nimport { OptionDirective } from \"./directives/option-directive\";\r\nimport { ItemListService } from \"./services/item-list.service\";\r\nimport { KeyboardNavigationDirective } from \"./directives/keyboard-navigation.directive\";\r\nimport { AutocompleteService } from \"./services/autocomplete.service\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule\r\n    ],\r\n    declarations: [\r\n        RemoteAutocompleteComponent,\r\n        OptionTemplateDirective,\r\n        OptionDirective,\r\n        KeyboardNavigationDirective\r\n    ],\r\n    exports: [\r\n        RemoteAutocompleteComponent,\r\n        OptionTemplateDirective\r\n    ],\r\n})\r\nexport class RemoteAutocompleteModule {\r\n}"],"names":[],"mappings":"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"}
