import { OnInit, EventEmitter, TemplateRef, OnDestroy, ElementRef } from "@angular/core";
import { ControlValueAccessor } from "@angular/forms";
import { AutocompleteItem } from "../interfaces/autocomplete.item";
import { SearchStateType } from "../enums/search-state.type";
import { ItemListService } from "../services/item-list.service";
import { AutocompleteSourceService } from "../interfaces/autocomplete-source.service";
import { AutocompleteService } from "../services/autocomplete.service";
import { ParameterizedAutocompleteSourceService } from "../interfaces/parameterized-autocomplete-sourse.servise";
import { Autocomplete } from "../interfaces/autocomplete";
export declare class RemoteAutocompleteComponent implements OnInit, OnDestroy, ControlValueAccessor, Autocomplete {
    itemListService: ItemListService;
    autocompleteService: AutocompleteService;
    service: AutocompleteSourceService | ParameterizedAutocompleteSourceService;
    minChars: number;
    maxChars: number;
    pause: number;
    inputId: string;
    inputName: string;
    inputClasses: string[];
    disabled: boolean;
    notFoundText: string;
    searchingText: string;
    placeholder: string;
    searchParameters: any;
    autocompleteAttr: string;
    tabindex: number;
    stopEnterPropagationOnSelect: boolean;
    needToShowNotFoundText: boolean;
    needToShowSearchingText: boolean;
    type: EventEmitter<void>;
    highlighted: EventEmitter<AutocompleteItem>;
    selected: EventEmitter<AutocompleteItem>;
    blur: EventEmitter<Event>;
    focusEvent: EventEmitter<Event>;
    optionTemplate: TemplateRef<any>;
    inputField: ElementRef;
    searchStates: typeof SearchStateType;
    searchState: SearchStateType;
    searchValue: string;
    searchResult: AutocompleteItem[];
    SEARCH_WRAPPER_CLASS: string;
    OPTION_LIST_WRAPPER_CLASS: string;
    OPTION_CLASS: string;
    OPTION_VALUE_CLASS: string;
    OPTION_DESCRIPTION_CLASS: string;
    LOADING_CLASS: string;
    RESULTS_NOT_FOUND_CLASS: string;
    private typingTimeout;
    private originalSearchValue;
    private changedHighlightSubscription;
    private selectSubscription;
    private propagateChange;
    private propagateTouched;
    constructor(itemListService: ItemListService, autocompleteService: AutocompleteService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(fn: any): void;
    setDisabledState(isDisabled: boolean): void;
    onType(): void;
    onInputBlur(event: FocusEvent): void;
    onInputFocus(event: Event): void;
    readonly inputClass: string;
    focus(): void;
    open(): void;
    close(): void;
    private validateService();
    private onActiveIndexChanged(activeIndex);
    private resetSearchTimeout();
    private setSearchTimeout();
    private clearSearchTimeout();
    private search();
    private performSearch();
    private validsearchTerm();
    private isParameterizedSearch(service);
    private getDefaultIfNullOrUndefined<T>(value, defaultValue);
}
